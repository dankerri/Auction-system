{"ast":null,"code":"import _classCallCheck from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/dd/Desktop/nangua/frontend/src/content/container/user/components/profile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport { Route } from 'react-router-dom';\nimport { theUrl, tokenHeaders } from 'selfConfig';\nimport { UploadWeChat } from '../../public_component/index';\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this, props));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var url = theUrl + '/editUserProfile';\n      var payload = this.props.list.payload;\n      var auth = this.props.auth;\n      this.props.form.validateFields(function (err, values) {\n        fetch(url, {\n          headers: tokenHeaders(localStorage.getItem('token')),\n          method: 'POST',\n          body: JSON.stringify({\n            username: payload.username,\n            neckname: values.neckname,\n            id: auth.id\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          if (res.edit) {\n            alert(\"edit success\");\n\n            _this2.props.dispatch({\n              type: 'GET_PROFILE_SUCCESS',\n              payload: {\n                username: res.username,\n                neckname: res.neckname,\n                id: res.id\n              }\n            });\n          } else {\n            alert(\"edit failded\");\n          }\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch({\n        type: 'GET_PROFILE',\n        username: this.props.auth.username\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$props = this.props,\n          list = _this$props.list,\n          auth = _this$props.auth;\n\n      if (!list.loading && list.payload) {\n        return React.createElement(Form, {\n          layout: \"\",\n          onSubmit: this.handleSubmit,\n          style: {\n            width: \"300px\",\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(Form.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(UploadWeChat, {\n          username: auth.username,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        })), React.createElement(Form.Item, {\n          label: \"Username: \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \" \", list.payload.username, \" \")), React.createElement(Form.Item, {\n          label: \"Neck name: \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, getFieldDecorator('neckname', {})(React.createElement(Input, {\n          placeholder: list.payload.neckname,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }))), React.createElement(Form.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Update change\")));\n      } else {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Loading\");\n      }\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    list: state.list\n  };\n};\n\nvar theProfile = Form.create({\n  name: 'normal_login'\n})(Profile);\nexport default connect(mapStateToProps)(Form.create({\n  name: 'edit_profile'\n})(theProfile));","map":{"version":3,"sources":["/home/dd/Desktop/nangua/frontend/src/content/container/user/components/profile.js"],"names":["React","Component","connect","Form","Input","Button","Route","theUrl","tokenHeaders","UploadWeChat","Profile","props","handleSubmit","bind","e","preventDefault","url","payload","list","auth","form","validateFields","err","values","fetch","headers","localStorage","getItem","method","body","JSON","stringify","username","neckname","id","then","res","json","edit","alert","dispatch","type","getFieldDecorator","loading","width","textAlign","mapStateToProps","state","theProfile","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from  'react'\nimport { connect } from 'react-redux'\nimport { Form, Input, Button } from 'antd'\nimport { Route } from 'react-router-dom'\n\nimport { theUrl, tokenHeaders } from 'selfConfig'\nimport { UploadWeChat } from '../../public_component/index'\n\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const url = theUrl + '/editUserProfile'\n        const payload = this.props.list.payload\n        const auth = this.props.auth\n\n        this.props.form.validateFields((err, values)=> {\n            fetch(url, {\n                headers: tokenHeaders(localStorage.getItem('token')),\n                method: 'POST',\n                body: JSON.stringify({\n                    username: payload.username,\n                    neckname: values.neckname,\n                    id: auth.id\n                })\n            })\n            .then(res=> { return res.json() })\n            .then( res => {\n                if(res.edit) {\n                    alert(\"edit success\")\n                    this.props.dispatch({ type: 'GET_PROFILE_SUCCESS', payload: { \n                        username: res.username,\n                        neckname: res.neckname,\n                        id: res.id\n                    }})\n                } else {\n                    alert(\"edit failded\")\n                }\n            })\n        })\n    }\n\n    componentDidMount() {\n        this.props.dispatch({type: 'GET_PROFILE', username: this.props.auth.username})\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form\n        const { list, auth } = this.props\n            if( !list.loading && list.payload ) {\n                return (\n                    <Form layout=\"\" onSubmit={this.handleSubmit} style={{ width: \"300px\", textAlign: 'center'}}>\n                        <Form.Item>\n                            <UploadWeChat\n                                username={auth.username}\n                            />\n                        </Form.Item>\n                        \n                        <Form.Item label=\"Username: \">\n                            <label> { list.payload.username } </label>\n                        </Form.Item>\n\n                        <Form.Item label=\"Neck name: \">\n                        {getFieldDecorator('neckname', {})(\n                            <Input placeholder={list.payload.neckname}  />\n                        )}\n                        </Form.Item> \n\n                        <Form.Item>\n                            <Button \n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            >Update change</Button>\n                        </Form.Item>\n                    </Form>\n                )\n            }\n            else {\n                return <h1>Loading</h1>\n            }\n\n\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    list: state.list\n})\n\nconst theProfile = Form.create({ name: 'normal_login' })(Profile);\n\nexport default connect(\n    mapStateToProps\n)(Form.create({ name:'edit_profile'})(\ntheProfile))\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/dd/Desktop/nangua/frontend/src/content/container/user/components/postCommodity.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Input, Button, Upload, Icon, Modal, Select } from 'antd';\nimport { Link, Route } from 'react-router-dom';\nimport { theUrl, tokenHeaders } from 'selfConfig';\nimport { PreRoute, UploadWeChat } from '../../public_component/index'; // page structor\n\nvar postCommodity = function postCommodity(_ref) {\n  var match = _ref.match,\n      auth = _ref.auth;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: {\n      pathname: \"/user_profile/postedCommodity/newPost\",\n      state: {\n        username: auth.username\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Create New Post\"), React.createElement(Route, {\n    path: \"/user_profile/postedCommodity/newPost\",\n    component: NewPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(LivingPostList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n};\n\nvar newPost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(newPost, _Component);\n\n  function newPost(props) {\n    var _this;\n\n    _classCallCheck(this, newPost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(newPost).call(this, props));\n    _this.state = {\n      loading: true,\n      username: _this.props.location.state.username,\n      payload: []\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(newPost, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var url, payload;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = theUrl + '/userProfile';\n                _context.next = 3;\n                return fetch(url, {\n                  headers: tokenHeaders(localStorage.getItem(\"token\")),\n                  method: 'POST',\n                  body: JSON.stringify({\n                    username: this.state.username\n                  })\n                }).then(function (res) {\n                  return res.json();\n                });\n\n              case 3:\n                payload = _context.sent;\n                this.setState({\n                  loading: false,\n                  payload: payload[0]\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log(values);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var payload = this.state.payload;\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var TextArea = Input.TextArea;\n      var Option = Select.Option;\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, payload.username), React.createElement(Form.Item, {\n        label: \"phone number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, getFieldDecorator('phone', {\n        initialValue: payload.phone\n      })(React.createElement(Input, {\n        username: payload.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Wechat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"\".concat(theUrl, \"/user/\").concat(payload.username, \"_wx.jpg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(PicturesWall, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(Form.Item, {\n        label: \"commodity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, getFieldDecorator('commodity', {\n        rules: [{\n          required: true,\n          message: '商品名不能为空'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, getFieldDecorator('price', {\n        rules: [{\n          required: true,\n          message: '商品价格不能为空'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, getFieldDecorator('des', {\n        rules: [{\n          required: true,\n          message: '商品描述不能为空'\n        }]\n      })(React.createElement(TextArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"\\u5206\\u7C7B\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Select, {\n        value: \"others\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"book\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"\\u4E66\\u7C4D\"), React.createElement(Option, {\n        value: \"elect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"\\u7535\\u5B50\\u4EA7\\u54C1\"), React.createElement(Option, {\n        value: \"job\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"\\u5916\\u5FEB\"), React.createElement(Option, {\n        value: \"others\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"others\"))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Create Now!\")));\n    }\n  }]);\n\n  return newPost;\n}(Component);\n\nvar LivingPostList = function LivingPostList() {\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Living Commodity List\");\n};\n\nvar PicturesWall =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PicturesWall, _React$Component);\n\n  function PicturesWall() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, PicturesWall);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PicturesWall)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = _defineProperty({\n      previewVisible: false,\n      previewImage: '',\n      fileList: [{\n        uid: '-1',\n        name: 'xxx.png',\n        status: 'done',\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n      }]\n    }, \"fileList\", []);\n\n    _this2.handleCancel = function () {\n      return _this2.setState({\n        previewVisible: false\n      });\n    };\n\n    _this2.handlePreview = function (file) {\n      _this2.setState({\n        previewImage: file.url || file.thumbUrl,\n        previewVisible: true\n      });\n    };\n\n    _this2.handleChange = function (_ref2) {\n      var fileList = _ref2.fileList;\n      return _this2.setState({\n        fileList: fileList\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(PicturesWall, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          previewVisible = _this$state.previewVisible,\n          previewImage = _this$state.previewImage,\n          fileList = _this$state.fileList;\n      var uploadButton = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"ant-upload-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Upload\"));\n      return React.createElement(\"div\", {\n        className: \"clearfix\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Upload, {\n        name: \"pic\",\n        action: \"//jsonplaceholder.typicode.com/posts/\",\n        listType: \"picture-card\",\n        fileList: fileList,\n        onPreview: this.handlePreview,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, fileList.length >= 3 ? null : uploadButton), React.createElement(Modal, {\n        visible: previewVisible,\n        footer: null,\n        onCancel: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"example\",\n        style: {\n          width: '100%'\n        },\n        src: previewImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PicturesWall;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nvar PostCommodity = connect(mapStateToProps)(postCommodity);\nvar NewPost = Form.create({\n  name: 'create_new_post'\n})(newPost);\nexport default PostCommodity;","map":{"version":3,"sources":["/home/dd/Desktop/nangua/frontend/src/content/container/user/components/postCommodity.js"],"names":["React","Component","connect","Form","Input","Button","Upload","Icon","Modal","Select","Link","Route","theUrl","tokenHeaders","PreRoute","UploadWeChat","postCommodity","match","auth","pathname","state","username","NewPost","newPost","props","loading","location","payload","handleSubmit","bind","url","fetch","headers","localStorage","getItem","method","body","JSON","stringify","then","res","json","setState","e","preventDefault","form","validateFields","err","values","console","log","getFieldDecorator","TextArea","Option","initialValue","phone","rules","required","message","LivingPostList","PicturesWall","previewVisible","previewImage","fileList","uid","name","status","handleCancel","handlePreview","file","thumbUrl","handleChange","uploadButton","length","width","mapStateToProps","PostCommodity","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Form, Input, Button, Upload, Icon, Modal, Select } from 'antd'\nimport { Link,Route } from 'react-router-dom'\n\nimport { theUrl , tokenHeaders } from 'selfConfig'\nimport { PreRoute, UploadWeChat } from '../../public_component/index'\n\n// page structor\nconst postCommodity = ({match, auth}) => {\n    return(\n        <div>\n            <Link \n                to={{\n                    pathname: \"/user_profile/postedCommodity/newPost\",\n                    state: {\n                        username: auth.username\n                    }\n                }}\n            >Create New Post</Link>\n            <Route \n                path={\"/user_profile/postedCommodity/newPost\"   }\n                component={NewPost}\n            />\n            <LivingPostList />\n        </div>\n    )\n}\n\n\nclass  newPost extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            username: this.props.location.state.username,\n            payload: []\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    async componentDidMount() {\n        const url = theUrl + '/userProfile'\n\n        const payload = await fetch(url, {\n            headers: tokenHeaders(localStorage.getItem(\"token\")),\n            method: 'POST',\n            body: JSON.stringify({\n            username: this.state.username\n            })\n        }).then( res => res.json() )\n        \n        this.setState({\n            loading: false,\n            payload: payload[0]\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.props.form.validateFields((err, values)=> {\n            if(!err) {\n                console.log(values)\n            }\n        })\n    }\n\n    render() {\n        const {payload} = this.state\n        const { getFieldDecorator } = this.props.form\n        const { TextArea } = Input \n        const { Option } = Select \n        return(\n            <Form onSubmit={this.handleSubmit}>\n                {/* personal information */}\n                <Form.Item label=\"username\">\n                {payload.username}\n                </Form.Item>\n                <Form.Item label=\"phone number\">\n                {getFieldDecorator('phone', {\n                    initialValue: payload.phone,\n                })(\n                    <Input \n                        username={payload.username}\n                    />\n                )}\n                </Form.Item>\n                <Form.Item label=\"Wechat\">\n                    <img src={`${theUrl}/user/${payload.username}_wx.jpg`} />\n                </Form.Item>\n                <Form.Item>\n                    <PicturesWall />\n                </Form.Item>\n                \n                <Form.Item label=\"commodity\">\n                {getFieldDecorator('commodity', {\n                    rules: [{required: true, message: '商品名不能为空'}]\n                })(\n                    <Input />\n                )}\n                </Form.Item>\n                <Form.Item label=\"price\">\n                {getFieldDecorator('price', {\n                    rules: [{required: true, message: '商品价格不能为空'}]\n                })(\n                    <Input />\n                )}\n                </Form.Item>\n\n                <Form.Item label=\"description\">\n                {getFieldDecorator('des', {\n                    rules: [{required: true, message: '商品描述不能为空'}]\n                })(\n                    <TextArea />\n                )}\n                </Form.Item>\n\n                <Form.Item label=\"分类\">\n                <Select value=\"others\">\n                    <Option value=\"book\">书籍</Option>\n                    <Option value=\"elect\">电子产品</Option>\n                    <Option value=\"job\">外快</Option>\n                    <Option value=\"others\">others</Option>\n                </Select>\n                </Form.Item>\n\n                <Form.Item>\n                    <Button \n                        type=\"primary\"\n                        htmlType=\"submit\"\n                    >Create Now!</Button>\n                </Form.Item>\n            </Form>\n        )\n    }\n}\n\nconst LivingPostList = () => {\n    return (\n        <h1>Living Commodity List</h1>\n    )\n}\n\n\n\nclass PicturesWall extends React.Component {\n    state = {\n      previewVisible: false,\n      previewImage: '',\n      fileList: [{\n        uid: '-1',\n        name: 'xxx.png',\n        status: 'done',\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n      }],\n    fileList: []\n    };\n  \n    handleCancel = () => this.setState({ previewVisible: false })\n  \n    handlePreview = (file) => {\n      this.setState({\n        previewImage: file.url || file.thumbUrl,\n        previewVisible: true,\n      });\n    }\n  \n    handleChange = ({ fileList }) => this.setState({ fileList })\n  \n    render() {\n      const { previewVisible, previewImage, fileList } = this.state;\n      const uploadButton = (\n        <div>\n          <Icon type=\"plus\" />\n          <div className=\"ant-upload-text\">Upload</div>\n        </div>\n      );\n      return (\n        <div className=\"clearfix\">\n          <Upload\n            name=\"pic\"\n            action=\"//jsonplaceholder.typicode.com/posts/\"\n            listType=\"picture-card\"\n            fileList={fileList}\n            onPreview={this.handlePreview}\n            onChange={this.handleChange}\n          >\n            {fileList.length >= 3 ? null : uploadButton}\n          </Upload>\n          <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n            <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n          </Modal>\n        </div>\n      );\n    }\n  }\n\n\n\n\n\n\n\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\nconst PostCommodity =  connect(mapStateToProps )(postCommodity)\nconst NewPost = Form.create({ name: 'create_new_post' })(newPost)\n\nexport default PostCommodity"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/dd/Desktop/nangua/frontend/src/content/container/user/components/profile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport { Route } from 'react-router-dom';\nimport { theUrl, tokenHeaders } from 'selfConfig';\nimport { UploadWeChat } from '../../public_component/index';\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this, props));\n\n    _this.fetchData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response, payload;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(url, {\n                  headers: tokenHeaders(localStorage.getItem(\"token\")),\n                  method: 'POST',\n                  body: JSON.stringify({\n                    username: action.username\n                  })\n                });\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                payload = _context.sent;\n                dispatch({\n                  type: 'HOME_INIT_SUCCESS',\n                  payload: payload\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchData = _this.fetchData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var url = theUrl + '/editUserProfile';\n      var payload = this.props.list.payload;\n      var auth = this.props.auth;\n      this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          fetch(url, {\n            headers: tokenHeaders(localStorage.getItem('token')),\n            method: 'POST',\n            body: JSON.stringify({\n              username: payload.username,\n              neckname: values.neckname,\n              id: auth.id\n            })\n          }).then(function (res) {\n            return res.json();\n          }).then(function (res) {\n            if (res.edit) {\n              alert(\"edit success\");\n\n              _this2.props.dispatch({\n                type: 'GET_PROFILE_SUCCESS',\n                payload: {\n                  username: res.username,\n                  neckname: res.neckname,\n                  id: res.id\n                }\n              });\n            } else {\n              alert(\"edit failded\");\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this.props.dispatch({type: 'GET_PROFILE', username: this.props.auth.username})\n      fetchData(this.props.dispatch);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$props = this.props,\n          list = _this$props.list,\n          auth = _this$props.auth;\n\n      if (!list.loading && list.payload) {\n        return React.createElement(Form, {\n          layout: \"\",\n          onSubmit: this.handleSubmit,\n          style: {\n            width: \"300px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(Form.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(UploadWeChat, {\n          username: auth.username,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        })), React.createElement(Form.Item, {\n          label: \"Username: \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \" \", list.payload.username, \" \")), React.createElement(Form.Item, {\n          label: \"Neck name: \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, getFieldDecorator('neckname', {\n          rules: [{\n            required: true,\n            message: 'Please input your neckname!'\n          }]\n        })(React.createElement(Input, {\n          placeholder: list.payload.neckname,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }))), React.createElement(Form.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"Update change\")));\n      } else {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"Loading\");\n      }\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    list: state.list\n  };\n};\n\nvar theProfile = Form.create({\n  name: 'normal_login'\n})(Profile);\nexport default connect(mapStateToProps)(Form.create({\n  name: 'edit_profile'\n})(theProfile));","map":{"version":3,"sources":["/home/dd/Desktop/nangua/frontend/src/content/container/user/components/profile.js"],"names":["React","Component","connect","Form","Input","Button","Route","theUrl","tokenHeaders","UploadWeChat","Profile","props","fetchData","dispatch","fetch","url","headers","localStorage","getItem","method","body","JSON","stringify","username","action","response","json","payload","type","handleSubmit","bind","e","preventDefault","list","auth","form","validateFields","err","values","neckname","id","then","res","edit","alert","getFieldDecorator","loading","width","rules","required","message","mapStateToProps","state","theProfile","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from  'react'\nimport { connect } from 'react-redux'\nimport { Form, Input, Button } from 'antd'\nimport { Route } from 'react-router-dom'\n\nimport { theUrl, tokenHeaders } from 'selfConfig'\nimport { UploadWeChat } from '../../public_component/index'\n\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.fetchData = this.fetchData.bind(this)\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const url = theUrl + '/editUserProfile'\n        const payload = this.props.list.payload\n        const auth = this.props.auth\n\n        this.props.form.validateFields((err, values)=> {\n            if (!err) {\n                fetch(url, {\n                    headers: tokenHeaders(localStorage.getItem('token')),\n                    method: 'POST',\n                    body: JSON.stringify({\n                        username: payload.username,\n                        neckname: values.neckname,\n                        id: auth.id\n                    })\n                })\n                .then(res=> { return res.json() })\n                .then( res => {\n                    if(res.edit) {\n                        alert(\"edit success\")\n                        this.props.dispatch({ type: 'GET_PROFILE_SUCCESS', payload: { \n                            username: res.username,\n                            neckname: res.neckname,\n                            id: res.id\n                        }})\n                    } else {\n                        alert(\"edit failded\")\n                    }\n                })\n            }\n        })\n    }\n\n    componentDidMount() {\n        // this.props.dispatch({type: 'GET_PROFILE', username: this.props.auth.username})\n        fetchData(this.props.dispatch)\n    }\n\n    fetchData = async (dispatch) => {\n        const response = await fetch(url, {\n            headers: tokenHeaders(localStorage.getItem(\"token\")),\n            method: 'POST',\n            body: JSON.stringify({\n              username: action.username\n            })\n          });\n        const payload = await response.json();\n        dispatch({type: 'HOME_INIT_SUCCESS', payload: payload })\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form\n        const { list, auth } = this.props\n            if( !list.loading && list.payload ) {\n                return (\n                    <Form layout=\"\" onSubmit={this.handleSubmit} style={{ width: \"300px\"}}>\n                        <Form.Item>\n                            <UploadWeChat\n                                username={auth.username}\n                            />\n                        </Form.Item>\n                        \n                        <Form.Item label=\"Username: \">\n                            <label> { list.payload.username } </label>\n                        </Form.Item>\n\n                        <Form.Item label=\"Neck name: \">\n                        {getFieldDecorator('neckname', {\n                            rules: [{ required: true, message: 'Please input your neckname!' }]\n                        })(\n                            <Input placeholder={list.payload.neckname}  />\n                        )}\n                        </Form.Item>\n                        <Form.Item>\n                        <Button \n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            >Update change</Button>\n                        </Form.Item>\n                    </Form>\n                )\n            }\n            else {\n                return <h1>Loading</h1>\n            }\n\n\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    list: state.list\n})\n\nconst theProfile = Form.create({ name: 'normal_login' })(Profile);\n\nexport default connect(\n    mapStateToProps\n)(Form.create({ name:'edit_profile'})(\ntheProfile))\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/dd/Desktop/shopping/frontend/src/content/container/user/signup.js\";\nimport React from 'react';\nimport { Form, Icon, Input, Button } from 'antd';\nimport { theUrl } from 'selfConfig';\n\nvar Signup = function Signup(props) {\n  var comfirmDirty = false;\n  var getFieldDecorator = props.form.getFieldDecorator;\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    props.form.validateFields(function (err, values) {\n      if (!err) {\n        var url = theUrl + '/signup';\n        fetch(url, {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          method: 'POST',\n          body: JSON.stringify({\n            username: values.email,\n            password: values.password\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          console.log(res.signup);\n        });\n      }\n    });\n  };\n\n  var validateEmail = function validateEmail(email) {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  var checkemail = function checkemail(rule, value, callback) {\n    // check email format\n    if (!validateEmail(value)) {\n      callback(\"This is not a valid email\");\n    } // check db if username repeats \n\n\n    var url = theUrl + '/duplicationCheck';\n    fetch(url, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        username: value\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      console.log(res.existence);\n\n      if (res.existence) {\n        callback('useranem existence');\n      } else {\n        callback();\n      }\n    });\n  };\n\n  var validateToNextPassword = function validateToNextPassword(rule, value, callback) {\n    var form = props.form;\n\n    if (value && comfirmDirty) {\n      form.validataFields(['confirm'], {\n        force: true\n      });\n    }\n\n    callback();\n  };\n\n  var compareToFirstPassword = function compareToFirstPassword(rules, value, callback) {\n    var form = props.form;\n\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two password that you entry are inconsistent');\n    } else {\n      callback();\n    }\n  };\n\n  return React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, getFieldDecorator('email', {\n    rules: [{\n      required: true,\n      message: 'Please input your username'\n    }, {\n      validator: checkemail\n    }],\n    validateTrigger: 'onBlur'\n  })(React.createElement(Input, {\n    placeholder: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, getFieldDecorator('password', {\n    rules: [{\n      required: true,\n      message: 'Please input your message'\n    }, {\n      validator: validateToNextPassword\n    }]\n  })(React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, getFieldDecorator('confirm', {\n    rules: [{\n      required: true,\n      message: 'Please input your password again'\n    }, {\n      validator: compareToFirstPassword\n    }]\n  })(React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"input password again\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Button, {\n    tpye: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"sign up\")));\n};\n\nexport default Form.create({\n  name: 'normal_login'\n})(Signup);","map":{"version":3,"sources":["/home/dd/Desktop/shopping/frontend/src/content/container/user/signup.js"],"names":["React","Form","Icon","Input","Button","theUrl","Signup","props","comfirmDirty","getFieldDecorator","form","handleSubmit","e","preventDefault","validateFields","err","values","url","fetch","headers","method","body","JSON","stringify","username","email","password","then","res","json","console","log","signup","validateEmail","test","checkemail","rule","value","callback","existence","validateToNextPassword","validataFields","force","compareToFirstPassword","rules","getFieldValue","required","message","validator","validateTrigger","create","name"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n    Form, Icon, Input, Button\n} from 'antd';\nimport { theUrl } from 'selfConfig'\n\n\nconst Signup = (props) => {\n\n    let comfirmDirty = false\n\n    const { getFieldDecorator } = props.form\n    \n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        props.form.validateFields((err, values)=>{\n            if( !err ) {\n                const url = theUrl + '/signup'\n                fetch(url, {\n                    headers: {\n                        'Accept':'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    method: 'POST',\n                    body: JSON.stringify({\n                        username: values.email,\n                        password: values.password\n                    })\n                })\n                .then( res => { return res.json() })\n                .then( res => { console.log( res.signup) } )\n            }\n        })\n    }\n\n    const validateEmail = (email) => {\n        if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    const checkemail = (rule, value, callback) => {\n        // check email format\n        if( !validateEmail(value) ) {\n            callback(\"This is not a valid email\")\n        }\n\n        // check db if username repeats \n        const url= theUrl+'/duplicationCheck'\n        fetch(url, {\n            headers: {\n                'Accept':'application/json',\n                'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify({\n                username: value,\n            })\n        })\n        .then(res => { return res.json() })\n        .then(res => {\n            console.log(res.existence)\n            if (res.existence) {\n                callback('useranem existence')\n            } else {\n                callback()\n            }\n        })\n    }\n\n    const validateToNextPassword = (rule, value, callback) => {\n        const form = props.form\n        if ( value && comfirmDirty) {\n            form.validataFields(['confirm'], { force: true })\n        }\n        callback()\n    }\n\n    const compareToFirstPassword = (rules, value, callback) => {\n        const form = props.form\n        if( value && value !== form.getFieldValue('password')) {\n            callback('Two password that you entry are inconsistent')\n        } else {\n            callback()\n        }\n    }\n    return(\n        <Form onSubmit={handleSubmit}>\n            <Form.Item>\n            {getFieldDecorator('email', {\n                rules: [{\n                    required: true, message: 'Please input your username'\n                }, {\n                    validator: checkemail\n                }],\n                validateTrigger: 'onBlur'\n            })\n            (<Input placeholder=\"email\"/>)}\n            </Form.Item>\n\n            <Form.Item>\n            {getFieldDecorator('password', {\n                rules: [{\n                    required : true, message: 'Please input your message'\n                }, {\n                    validator: validateToNextPassword\n                }]\n            })(<Input type=\"password\" placeholder=\"password\"/>)}\n            </Form.Item>\n\n            <Form.Item>\n            {getFieldDecorator('confirm',{\n                rules: [{\n                    required: true, message: 'Please input your password again'\n                }, {\n                    validator: compareToFirstPassword\n                }]\n            })(<Input type=\"password\" placeholder=\"input password again\"/>)}\n            </Form.Item>\n\n            <Form.Item>\n            <Button tpye=\"primary\" htmlType=\"submit\">sign up</Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\n\nexport default Form.create({name: 'normal_login'})(Signup)"]},"metadata":{},"sourceType":"module"}
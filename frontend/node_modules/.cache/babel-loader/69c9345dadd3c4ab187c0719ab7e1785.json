{"ast":null,"code":"import _regeneratorRuntime from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/dd/Desktop/nangua/frontend/src/content/container/user/components/postCommodity.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Input, Button, Upload, Icon, Select, Modal, message } from 'antd';\nimport { Link, Route } from 'react-router-dom';\nimport reqwest from 'reqwest';\nimport { theUrl, tokenHeaders } from 'selfConfig';\nimport { PreRoute, UploadWeChat } from '../../public_component/index'; // page structor\n\nvar postCommodity = function postCommodity(_ref) {\n  var match = _ref.match,\n      auth = _ref.auth;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: {\n      pathname: \"/user_profile/postedCommodity/newPost\",\n      state: {\n        username: auth.username\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Create New Post\"), React.createElement(Route, {\n    path: \"/user_profile/postedCommodity/newPost\",\n    component: NewPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(LivingPostList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n};\n\nvar newPost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(newPost, _Component);\n\n  function newPost(props) {\n    var _this;\n\n    _classCallCheck(this, newPost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(newPost).call(this, props));\n    _this.state = {\n      loading: true,\n      // location.state is passed by <Link>\n      username: _this.props.location.state.username,\n      payload: []\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(newPost, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var url, payload;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = theUrl + '/userProfile';\n                _context.next = 3;\n                return fetch(url, {\n                  headers: tokenHeaders(localStorage.getItem(\"token\")),\n                  method: 'POST',\n                  body: JSON.stringify({\n                    username: this.state.username\n                  })\n                }).then(function (res) {\n                  return res.json();\n                });\n\n              case 3:\n                payload = _context.sent;\n                this.setState({\n                  loading: false,\n                  payload: payload[0]\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log(_this2.state.payload);\n          console.log(values);\n          var payload = _this2.state.payload;\n          var url = theUrl + '/createCard';\n          var date = new Date();\n          date = date.getUTCFullYear() + '-' + ('00' + (date.getUTCMonth() + 1)).slice(-2) + '-' + ('00' + date.getUTCDate()).slice(-2) + ' ' + ('00' + date.getUTCHours()).slice(-2) + ':' + ('00' + date.getUTCMinutes()).slice(-2) + ':' + ('00' + date.getUTCSeconds()).slice(-2);\n          fetch(url, {\n            headers: tokenHeaders(localStorage.getItem(\"token\")),\n            method: 'POST',\n            body: JSON.stringify({\n              uid: payload.uid,\n              commodity: values.commoidty,\n              price: values.price,\n              des: values.des,\n              post_time: date,\n              category: values.category\n            })\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var payload = this.state.payload;\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var TextArea = Input.TextArea;\n      var Option = Select.Option;\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: \"phone number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, getFieldDecorator('phone', {\n        initialValue: payload.phone\n      })(React.createElement(Input, {\n        username: payload.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Test, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })), React.createElement(Form.Item, {\n        label: \"commodity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, getFieldDecorator('commodity', {\n        rules: [{\n          required: true,\n          message: '商品名不能为空'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, getFieldDecorator('price', {\n        rules: [{\n          required: true,\n          message: '商品价格不能为空'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, getFieldDecorator('des', {\n        rules: [{\n          required: true,\n          message: '商品描述不能为空'\n        }]\n      })(React.createElement(TextArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"\\u5206\\u7C7B\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, getFieldDecorator('category', {\n        initialValue: \"1\",\n        rules: [{\n          required: true,\n          message: '商品描述不能为空'\n        }]\n      })(React.createElement(Select, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"\\u4E66\\u7C4D\"), React.createElement(Option, {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"\\u7535\\u5B50\\u4EA7\\u54C1\"), React.createElement(Option, {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"\\u5916\\u5FEB\"), React.createElement(Option, {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"others\")))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Create Now!\")));\n    }\n  }]);\n\n  return newPost;\n}(Component);\n\nvar LivingPostList = function LivingPostList() {\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Living Commodity List\");\n}; // =================================================================================================\n// test part\n\n\nvar PallWrop =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PallWrop, _React$Component);\n\n  function PallWrop() {\n    var _getPrototypeOf2;\n\n    var _this3;\n\n    _classCallCheck(this, PallWrop);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PallWrop)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this3.state = {\n      previewVisible: false,\n      previewImage: ''\n    };\n\n    _this3.handlePreview = function (file) {\n      _this3.setState({\n        previewImage: file.url || file.thumbUrl,\n        previewVisible: true\n      });\n    };\n\n    return _this3;\n  }\n\n  _createClass(PallWrop, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          fileList = _this$props.fileList,\n          imgNumber = _this$props.imgNumber,\n          onChange = _this$props.onChange;\n      var list = fileList || [];\n      var _this$state = this.state,\n          previewVisible = _this$state.previewVisible,\n          previewImage = _this$state.previewImage;\n      var uploadButton = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"ant-upload-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Upload\"));\n      return React.createElement(\"div\", {\n        className: \"clearfix\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Upload, {\n        action: \"http://localhost:7001/api/upload\",\n        listType: \"picture-card\",\n        fileList: list,\n        onChange: onChange,\n        onPreview: this.handlePreview,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, list.length >= imgNumber ? null : uploadButton), React.createElement(Modal, {\n        visible: previewVisible,\n        footer: null,\n        onCancel: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"example\",\n        style: {\n          width: '100%'\n        },\n        src: previewImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PallWrop;\n}(React.Component);\n\nvar FormItem = Form.Item;\n\nvar test =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(test, _React$Component2);\n\n  function test() {\n    var _getPrototypeOf3;\n\n    var _this4;\n\n    _classCallCheck(this, test);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this4 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(test)).call.apply(_getPrototypeOf3, [this].concat(args)));\n    _this4.state = {\n      fileList: [{\n        status: 'done',\n        uid: 0,\n        url: 'http://localhost:7001/public/images/kele.jpg'\n      }]\n    };\n\n    _this4.handleOnChange = function (_ref2) {\n      var fileList = _ref2.fileList;\n      console.log(fileList);\n      return fileList.map(function (file) {\n        return {\n          status: file.status,\n          uid: file.uid,\n          url: file.response ? file.response.data.url : file.url\n        };\n      });\n    };\n\n    return _this4;\n  }\n\n  _createClass(test, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var form = this.props.form;\n      var fileList = this.state.fileList;\n      form.setFieldsValue({\n        pictures: fileList\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          getFieldDecorator = _this$props2.form.getFieldDecorator,\n          form = _this$props2.form;\n      form.validateFields(function (error, fields) {\n        console.log(fields);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        label: '商店实景图',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, getFieldDecorator('pictures', {\n        valuePropName: 'fileList',\n        getValueFromEvent: this.handleOnChange\n      })(React.createElement(PallWrop, {\n        imgNumber: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        label: '商店实景图',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, getFieldDecorator('ddd', {\n        valuePropName: 'fileList',\n        getValueFromEvent: this.handleOnChange\n      })(React.createElement(PallWrop, {\n        imgNumber: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return test;\n}(React.Component);\n\nvar Test = Form.create({\n  name: 'uploadPic'\n})(test); // ================================================================================================\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nvar PostCommodity = connect(mapStateToProps)(postCommodity);\nvar NewPost = Form.create({\n  name: 'create_new_post'\n})(newPost);\nexport default PostCommodity;","map":{"version":3,"sources":["/home/dd/Desktop/nangua/frontend/src/content/container/user/components/postCommodity.js"],"names":["React","Component","connect","Form","Input","Button","Upload","Icon","Select","Modal","message","Link","Route","reqwest","theUrl","tokenHeaders","PreRoute","UploadWeChat","postCommodity","match","auth","pathname","state","username","NewPost","newPost","props","loading","location","payload","handleSubmit","bind","url","fetch","headers","localStorage","getItem","method","body","JSON","stringify","then","res","json","setState","e","preventDefault","form","validateFields","err","values","console","log","date","Date","getUTCFullYear","getUTCMonth","slice","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","uid","commodity","commoidty","price","des","post_time","category","getFieldDecorator","TextArea","Option","initialValue","phone","rules","required","LivingPostList","PallWrop","previewVisible","previewImage","handlePreview","file","thumbUrl","fileList","imgNumber","onChange","list","uploadButton","length","handleCancel","width","FormItem","Item","test","status","handleOnChange","map","response","data","setFieldsValue","pictures","error","fields","valuePropName","getValueFromEvent","Test","create","name","mapStateToProps","PostCommodity"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,MAA9B,EAAsCC,IAAtC,EAA4CC,MAA5C,EAAoDC,KAApD,EAA2DC,OAA3D,QAA2E,MAA3E;AACA,SAASC,IAAT,EAAcC,KAAd,QAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,SAASC,MAAT,EAAkBC,YAAlB,QAAsC,YAAtC;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,8BAAvC,C,CAEA;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAmB;AAAA,MAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,MAAVC,IAAU,QAAVA,IAAU;AACrC,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,EAAE,EAAE;AACAC,MAAAA,QAAQ,EAAE,uCADV;AAEAC,MAAAA,KAAK,EAAE;AACHC,QAAAA,QAAQ,EAAEH,IAAI,CAACG;AADZ;AAFP,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EASI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAE,uCADV;AAEI,IAAA,SAAS,EAAEC,OAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAaI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADJ;AAiBH,CAlBD;;IAqBOC,O;;;;;AACH,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;AACA,UAAKJ,KAAL,GAAa;AACTK,MAAAA,OAAO,EAAE,IADA;AAET;AACAJ,MAAAA,QAAQ,EAAE,MAAKG,KAAL,CAAWE,QAAX,CAAoBN,KAApB,CAA0BC,QAH3B;AAITM,MAAAA,OAAO,EAAE;AAJA,KAAb;AAOA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AATe;AAUlB;;;;;;;;;;;;;AAGSC,gBAAAA,G,GAAMlB,MAAM,GAAG,c;;uBAECmB,KAAK,CAACD,GAAD,EAAM;AAC7BE,kBAAAA,OAAO,EAAEnB,YAAY,CAACoB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CADQ;AAE7BC,kBAAAA,MAAM,EAAE,MAFqB;AAG7BC,kBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACrBjB,oBAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AADA,mBAAf;AAHuB,iBAAN,CAAL,CAMnBkB,IANmB,CAMb,UAAAC,GAAG;AAAA,yBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,iBANU,C;;;AAAhBd,gBAAAA,O;AAQN,qBAAKe,QAAL,CAAc;AACVjB,kBAAAA,OAAO,EAAE,KADC;AAEVE,kBAAAA,OAAO,EAAEA,OAAO,CAAC,CAAD;AAFN,iBAAd;;;;;;;;;;;;;;;;;;iCAMSgB,C,EAAG;AAAA;;AACZA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKpB,KAAL,CAAWqB,IAAX,CAAgBC,cAAhB,CAA+B,UAACC,GAAD,EAAMC,MAAN,EAAgB;AAC3C,YAAG,CAACD,GAAJ,EAAS;AAEPE,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAAC9B,KAAL,CAAWO,OAAvB;AACAsB,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAHO,cAKArB,OALA,GAKW,MAAI,CAACP,KALhB,CAKAO,OALA;AAMP,cAAMG,GAAG,GAAGlB,MAAM,GAAG,aAArB;AACA,cAAIuC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAD,UAAAA,IAAI,GAAGA,IAAI,CAACE,cAAL,KAAwB,GAAxB,GACD,CAAC,QAAQF,IAAI,CAACG,WAAL,KAAmB,CAA3B,CAAD,EAAgCC,KAAhC,CAAsC,CAAC,CAAvC,CADC,GAC2C,GAD3C,GAED,CAAC,OAAOJ,IAAI,CAACK,UAAL,EAAR,EAA2BD,KAA3B,CAAiC,CAAC,CAAlC,CAFC,GAEsC,GAFtC,GAGD,CAAC,OAAOJ,IAAI,CAACM,WAAL,EAAR,EAA4BF,KAA5B,CAAkC,CAAC,CAAnC,CAHC,GAGuC,GAHvC,GAID,CAAC,OAAOJ,IAAI,CAACO,aAAL,EAAR,EAA8BH,KAA9B,CAAoC,CAAC,CAArC,CAJC,GAIyC,GAJzC,GAKD,CAAC,OAAOJ,IAAI,CAACQ,aAAL,EAAR,EAA8BJ,KAA9B,CAAoC,CAAC,CAArC,CALN;AAOAxB,UAAAA,KAAK,CAACD,GAAD,EAAM;AACTE,YAAAA,OAAO,EAAEnB,YAAY,CAACoB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CADZ;AAETC,YAAAA,MAAM,EAAE,MAFC;AAGTC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBsB,cAAAA,GAAG,EAAEjC,OAAO,CAACiC,GADM;AAEnBC,cAAAA,SAAS,EAAEb,MAAM,CAACc,SAFC;AAGnBC,cAAAA,KAAK,EAAEf,MAAM,CAACe,KAHK;AAInBC,cAAAA,GAAG,EAAEhB,MAAM,CAACgB,GAJO;AAKnBC,cAAAA,SAAS,EAAEd,IALQ;AAMnBe,cAAAA,QAAQ,EAAElB,MAAM,CAACkB;AANE,aAAf;AAHG,WAAN,CAAL;AAYD;AACJ,OA7BD;AA8BH;;;6BAGQ;AAAA,UACEvC,OADF,GACa,KAAKP,KADlB,CACEO,OADF;AAAA,UAEGwC,iBAFH,GAEyB,KAAK3C,KAAL,CAAWqB,IAFpC,CAEGsB,iBAFH;AAAA,UAGGC,QAHH,GAGgBlE,KAHhB,CAGGkE,QAHH;AAAA,UAIGC,MAJH,GAIc/D,MAJd,CAIG+D,MAJH;AAKL,aACI,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKzC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCuC,iBAAiB,CAAC,OAAD,EAAU;AACxBG,QAAAA,YAAY,EAAE3C,OAAO,CAAC4C;AADE,OAAV,CAAjB,CAGG,oBAAC,KAAD;AACI,QAAA,QAAQ,EAAE5C,OAAO,CAACN,QADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHH,CADD,CAFJ,EAWI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAXJ,EAeI,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC8C,iBAAiB,CAAC,WAAD,EAAc;AAC5BK,QAAAA,KAAK,EAAE,CAAC;AAACC,UAAAA,QAAQ,EAAE,IAAX;AAAiBjE,UAAAA,OAAO,EAAE;AAA1B,SAAD;AADqB,OAAd,CAAjB,CAGG,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHH,CADD,CAfJ,EAsBI,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC2D,iBAAiB,CAAC,OAAD,EAAU;AACxBK,QAAAA,KAAK,EAAE,CAAC;AAACC,UAAAA,QAAQ,EAAE,IAAX;AAAiBjE,UAAAA,OAAO,EAAE;AAA1B,SAAD;AADiB,OAAV,CAAjB,CAGG,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHH,CADD,CAtBJ,EA8BI,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC2D,iBAAiB,CAAC,KAAD,EAAQ;AACtBK,QAAAA,KAAK,EAAE,CAAC;AAACC,UAAAA,QAAQ,EAAE,IAAX;AAAiBjE,UAAAA,OAAO,EAAE;AAA1B,SAAD;AADe,OAAR,CAAjB,CAGG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHH,CADD,CA9BJ,EAsCI,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC2D,iBAAiB,CAAC,UAAD,EAAa;AAC3BG,QAAAA,YAAY,EAAE,GADa;AAE3BE,QAAAA,KAAK,EAAE,CAAC;AAACC,UAAAA,QAAQ,EAAE,IAAX;AAAiBjE,UAAAA,OAAO,EAAE;AAA1B,SAAD;AAFoB,OAAb,CAAjB,CAIC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFF,EAGE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,EAIE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CAJD,CADD,CAtCJ,EAoDI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,IAAI,EAAC,SADT;AAEI,QAAA,QAAQ,EAAC,QAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CApDJ,CADJ;AA6DH;;;;EAnIkBT,S;;AAsIvB,IAAM2E,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ;AAGH,CAJD,C,CAMA;AACA;;;IACMC,Q;;;;;;;;;;;;;;;;;WACJvD,K,GAAQ;AACNwD,MAAAA,cAAc,EAAE,KADV;AAENC,MAAAA,YAAY,EAAE;AAFR,K;;WAKRC,a,GAAgB,UAAAC,IAAI,EAAI;AACtB,aAAKrC,QAAL,CAAc;AACZmC,QAAAA,YAAY,EAAEE,IAAI,CAACjD,GAAL,IAAYiD,IAAI,CAACC,QADnB;AAEZJ,QAAAA,cAAc,EAAE;AAFJ,OAAd;AAID,K;;;;;;;6BACQ;AAAA,wBACkC,KAAKpD,KADvC;AAAA,UACCyD,QADD,eACCA,QADD;AAAA,UACWC,SADX,eACWA,SADX;AAAA,UACqBC,QADrB,eACqBA,QADrB;AAEP,UAAMC,IAAI,GAAGH,QAAQ,IAAE,EAAvB;AAFO,wBAGkC,KAAK7D,KAHvC;AAAA,UAGCwD,cAHD,eAGCA,cAHD;AAAA,UAGiBC,YAHjB,eAGiBA,YAHjB;AAIP,UAAMQ,YAAY,GAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF;AAMA,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,MAAM,EAAC,kCADT;AAEE,QAAA,QAAQ,EAAC,cAFX;AAGE,QAAA,QAAQ,EAAED,IAHZ;AAIE,QAAA,QAAQ,EAAED,QAJZ;AAKE,QAAA,SAAS,EAAE,KAAKL,aALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGM,IAAI,CAACE,MAAL,IAAeJ,SAAf,GAA2B,IAA3B,GAAkCG,YAPrC,CADF,EAUE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAET,cAAhB;AAAgC,QAAA,MAAM,EAAE,IAAxC;AAA8C,QAAA,QAAQ,EAAE,KAAKW,YAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAC,SAAT;AAAmB,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAA1B;AAA6C,QAAA,GAAG,EAAEX,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAVF,CADF;AAgBD;;;;EAtCoB/E,KAAK,CAACC,S;;AAyC7B,IAAM0F,QAAQ,GAAGxF,IAAI,CAACyF,IAAtB;;IACMC,I;;;;;;;;;;;;;;;;;WACJvE,K,GAAQ;AACN6D,MAAAA,QAAQ,EAAE,CACR;AACEW,QAAAA,MAAM,EAAE,MADV;AAEEhC,QAAAA,GAAG,EAAE,CAFP;AAGE9B,QAAAA,GAAG,EAAE;AAHP,OADQ;AADJ,K;;WAgBR+D,c,GAAiB,iBAAkB;AAAA,UAAfZ,QAAe,SAAfA,QAAe;AACjChC,MAAAA,OAAO,CAACC,GAAR,CAAY+B,QAAZ;AACA,aAAOA,QAAQ,CAACa,GAAT,CAAa,UAAAf,IAAI;AAAA,eAAK;AAC3Ba,UAAAA,MAAM,EAAEb,IAAI,CAACa,MADc;AAE3BhC,UAAAA,GAAG,EAAEmB,IAAI,CAACnB,GAFiB;AAG3B9B,UAAAA,GAAG,EAAEiD,IAAI,CAACgB,QAAL,GAAchB,IAAI,CAACgB,QAAL,CAAcC,IAAd,CAAmBlE,GAAjC,GAAqCiD,IAAI,CAACjD;AAHpB,SAAL;AAAA,OAAjB,CAAP;AAKD,K;;;;;;;wCAbmB;AAAA,UACVe,IADU,GACD,KAAKrB,KADJ,CACVqB,IADU;AAAA,UAEVoC,QAFU,GAEG,KAAK7D,KAFR,CAEV6D,QAFU;AAGlBpC,MAAAA,IAAI,CAACoD,cAAL,CAAoB;AAAEC,QAAAA,QAAQ,EAAEjB;AAAZ,OAApB;AACD;;;6BAWQ;AAAA,yBAIH,KAAKzD,KAJF;AAAA,UAEG2C,iBAFH,gBAELtB,IAFK,CAEGsB,iBAFH;AAAA,UAGLtB,IAHK,gBAGLA,IAHK;AAKPA,MAAAA,IAAI,CAACC,cAAL,CAAoB,UAACqD,KAAD,EAAQC,MAAR,EAAmB;AACrCnD,QAAAA,OAAO,CAACC,GAAR,CAAYkD,MAAZ;AACD,OAFD;AAGA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGjC,iBAAiB,CAAC,UAAD,EAAa;AAC7BkC,QAAAA,aAAa,EAAE,UADc;AAE7BC,QAAAA,iBAAiB,EAAE,KAAKT;AAFK,OAAb,CAAjB,CAGE,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADH,CADF,EAOE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG1B,iBAAiB,CAAC,KAAD,EAAQ;AACxBkC,QAAAA,aAAa,EAAE,UADS;AAExBC,QAAAA,iBAAiB,EAAE,KAAKT;AAFA,OAAR,CAAjB,CAGE,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADH,CAPF,CADF,CADF;AAkBD;;;;EApDgB/F,KAAK,CAACC,S;;AAuDzB,IAAMwG,IAAI,GAAGtG,IAAI,CAACuG,MAAL,CAAY;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAZ,EAAmCd,IAAnC,CAAb,C,CAOA;;AAQA,IAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAAAtF,KAAK;AAAA,SAAK;AAC9BF,IAAAA,IAAI,EAAEE,KAAK,CAACF;AADkB,GAAL;AAAA,CAA7B;;AAGA,IAAMyF,aAAa,GAAI3G,OAAO,CAAC0G,eAAD,CAAP,CAA0B1F,aAA1B,CAAvB;AACA,IAAMM,OAAO,GAAGrB,IAAI,CAACuG,MAAL,CAAY;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAZ,EAAyClF,OAAzC,CAAhB;AAEA,eAAeoF,aAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Form, Input, Button, Upload, Icon, Select, Modal, message, } from 'antd'\nimport { Link,Route } from 'react-router-dom'\nimport reqwest from 'reqwest'\n\nimport { theUrl , tokenHeaders } from 'selfConfig'\nimport { PreRoute, UploadWeChat } from '../../public_component/index'\n\n// page structor\nconst postCommodity = ({match, auth}) => {\n    return(\n        <div>\n            <Link \n                to={{\n                    pathname: \"/user_profile/postedCommodity/newPost\",\n                    state: {\n                        username: auth.username\n                    }\n                }}\n            >Create New Post</Link>\n            <Route \n                path={\"/user_profile/postedCommodity/newPost\"   }\n                component={NewPost}\n            />\n            <LivingPostList />\n        </div>\n    )\n}\n\n\nclass  newPost extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            // location.state is passed by <Link>\n            username: this.props.location.state.username,\n            payload: []\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    async componentDidMount() {\n        const url = theUrl + '/userProfile'\n\n        const payload = await fetch(url, {\n            headers: tokenHeaders(localStorage.getItem(\"token\")),\n            method: 'POST',\n            body: JSON.stringify({\n            username: this.state.username\n            })\n        }).then( res => res.json() )\n        \n        this.setState({\n            loading: false,\n            payload: payload[0]\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.props.form.validateFields((err, values)=> {\n            if(!err) {\n\n              console.log(this.state.payload)\n              console.log(values)\n\n              const {payload} = this.state\n              const url = theUrl + '/createCard'\n              var date = new Date()\n              date = date.getUTCFullYear() + '-' +\n                    ('00' + (date.getUTCMonth()+1)).slice(-2) + '-' +\n                    ('00' + date.getUTCDate()).slice(-2) + ' ' + \n                    ('00' + date.getUTCHours()).slice(-2) + ':' + \n                    ('00' + date.getUTCMinutes()).slice(-2) + ':' + \n                    ('00' + date.getUTCSeconds()).slice(-2);\n              \n              fetch(url, {\n                headers: tokenHeaders(localStorage.getItem(\"token\")),\n                method: 'POST',\n                body: JSON.stringify({\n                  uid: payload.uid,\n                  commodity: values.commoidty,\n                  price: values.price,\n                  des: values.des,\n                  post_time: date,\n                  category: values.category\n                })\n              })\n            }\n        })\n    }\n\n\n    render() {\n        const {payload} = this.state\n        const { getFieldDecorator } = this.props.form\n        const { TextArea } = Input \n        const { Option } = Select \n        return(\n            <Form onSubmit={this.handleSubmit}>\n                {/* personal information */}\n                <Form.Item label=\"phone number\">\n                {getFieldDecorator('phone', {\n                    initialValue: payload.phone,\n                })(\n                    <Input \n                        username={payload.username}\n                    />\n                )}\n                </Form.Item>\n                <Form.Item>\n                    <Test />\n                </Form.Item>\n                \n                <Form.Item label=\"commodity\">\n                {getFieldDecorator('commodity', {\n                    rules: [{required: true, message: '商品名不能为空'}]\n                })(\n                    <Input />\n                )}\n                </Form.Item>\n                <Form.Item label=\"price\">\n                {getFieldDecorator('price', {\n                    rules: [{required: true, message: '商品价格不能为空'}]\n                })(\n                    <Input />\n                )}\n                </Form.Item>\n\n                <Form.Item label=\"description\">\n                {getFieldDecorator('des', {\n                    rules: [{required: true, message: '商品描述不能为空'}]\n                })(\n                    <TextArea />\n                )}\n                </Form.Item>\n\n                <Form.Item label=\"分类\">\n                {getFieldDecorator('category', {\n                    initialValue: \"1\",\n                    rules: [{required: true, message: '商品描述不能为空'}]\n                })(\n                  <Select>\n                    <Option value=\"1\">书籍</Option>\n                    <Option value=\"2\">电子产品</Option>\n                    <Option value=\"3\">外快</Option>\n                    <Option value=\"0\">others</Option>\n                  </Select>\n                )}\n                </Form.Item>\n\n                <Form.Item>\n                    <Button \n                        type=\"primary\"\n                        htmlType=\"submit\"\n                    >Create Now!</Button>\n                </Form.Item>\n            </Form>\n        )\n    }\n}\n\nconst LivingPostList = () => {\n    return (\n        <h1>Living Commodity List</h1>\n    )\n}\n\n// =================================================================================================\n// test part\nclass PallWrop extends React.Component {\n  state = {\n    previewVisible: false,\n    previewImage: '',\n  };\n\n  handlePreview = file => {\n    this.setState({\n      previewImage: file.url || file.thumbUrl,\n      previewVisible: true,\n    });\n  };\n  render() {\n    const { fileList, imgNumber,onChange } = this.props;\n    const list = fileList||[]\n    const { previewVisible, previewImage } = this.state;\n    const uploadButton = (\n      <div>\n        <Icon type=\"plus\" />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    return (\n      <div className=\"clearfix\">\n        <Upload\n          action=\"http://localhost:7001/api/upload\"\n          listType=\"picture-card\"\n          fileList={list}\n          onChange={onChange}\n          onPreview={this.handlePreview}\n        >\n          {list.length >= imgNumber ? null : uploadButton}\n        </Upload>\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst FormItem = Form.Item;\nclass test extends React.Component {\n  state = {\n    fileList: [\n      {\n        status: 'done',\n        uid: 0,\n        url: 'http://localhost:7001/public/images/kele.jpg',\n      },\n    ],\n  };\n\n  componentDidMount() {\n    const { form } = this.props;\n    const { fileList } = this.state;\n    form.setFieldsValue({ pictures: fileList });\n  }\n\n  handleOnChange = ({ fileList }) => {\n    console.log(fileList)\n    return fileList.map(file => ({\n      status: file.status,\n      uid: file.uid,\n      url: file.response?file.response.data.url:file.url,\n    }));\n  };\n\n  render() {\n    const {\n      form: { getFieldDecorator },\n      form,\n    } = this.props;\n    form.validateFields((error, fields) => {\n      console.log(fields);\n    });\n    return (\n      <div>\n        <Form>\n          <FormItem label={'商店实景图'}>\n            {getFieldDecorator('pictures', {\n              valuePropName: 'fileList',\n              getValueFromEvent: this.handleOnChange,\n            })(<PallWrop imgNumber={3} />)}\n          </FormItem>\n          <FormItem label={'商店实景图'}>\n            {getFieldDecorator('ddd', {\n              valuePropName: 'fileList',\n              getValueFromEvent: this.handleOnChange,\n            })(<PallWrop imgNumber={1} />)}\n          </FormItem>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst Test = Form.create({ name: 'uploadPic' })(test)\n\n\n\n\n\n\n// ================================================================================================\n\n\n\n\n\n\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\nconst PostCommodity =  connect(mapStateToProps )(postCommodity)\nconst NewPost = Form.create({ name: 'create_new_post' })(newPost)\n\nexport default PostCommodity"]},"metadata":{},"sourceType":"module"}
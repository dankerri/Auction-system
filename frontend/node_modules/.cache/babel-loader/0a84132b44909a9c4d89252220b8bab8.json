{"ast":null,"code":"import _classCallCheck from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dd/Desktop/nangua/frontend/src/content/container/user/components/cardList.js\";\n// display data and pictures as cards.\n// Accept payload and category\nimport React, { Component } from 'react';\nimport { theUrl, tokenHeaders, dateTimeToDate } from 'selfConfig';\nimport { Icon, Row, Col } from 'antd';\nimport StyleCard from './styleCard'; // import Zmage from 'react-zmage'\n// import { throws } from 'assert';\n\nvar PostCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostCard, _Component);\n\n  function PostCard(props) {\n    _classCallCheck(this, PostCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PostCard).call(this, props));\n  }\n\n  _createClass(PostCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          payload = _this$props.payload,\n          category = _this$props.category; // filter commodity, in default return all commodity\n\n      var filterPayload;\n\n      if (!category) {\n        filterPayload = payload;\n      } else {\n        filterPayload = payload.filter(function (item) {\n          return item.category === category;\n        });\n      }\n\n      var cateIcon = [{\n        name: 'Others',\n        icon: React.createElement(Icon, {\n          type: \"bars\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        })\n      }, {\n        name: '书籍',\n        icon: React.createElement(Icon, {\n          type: \"book\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        })\n      }, {\n        name: '电子产品',\n        icon: React.createElement(Icon, {\n          type: \"thunderbolt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        })\n      }, {\n        name: '外快',\n        icon: React.createElement(Icon, {\n          type: \"pay-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        })\n      }];\n      return React.createElement(Row, {\n        gutter: 16 + 32,\n        type: \"flex\",\n        justify: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, filterPayload.map(function (item) {\n        return React.createElement(Col, {\n          xs: 24,\n          xl: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(StyleCard, {\n          item: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }));\n      }));\n    }\n  }]);\n\n  return PostCard;\n}(Component); // class LoadZamge extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       set: [],\n//       pic_num : this.props.pic_num,\n//       cid : this.props.cid\n//     }\n//     this.getPicList = this.getPicList.bind(this)\n//   }\n//   componentDidMount() {\n//     const { pic_num, cid } = this.props\n//     this.getPicList(pic_num, cid)\n//   }\n//   getPicList = async (pic_num, cid) => {\n//     let list = []\n//     for(var i = 0; i < pic_num; i++) {\n//       list[i] = await { src: theUrl+`/commodity/${cid}_${i}.jpg`}\n//     }\n//     await this.setState({\n//       set: list\n//     })\n//   }\n//   render() {\n//     return(\n//       <Zmage\n//         style={{heigth: \"10rem\", weight: \"100%\", overflow: \"hidden\"}}\n//         src={theUrl+`/commodity/${this.state.cid}_0_thumb.jpg`}\n//         set={this.state.set}\n//         // preset=\"mobile\"\n//       />\n//     )\n//   }\n// }\n\n\nexport default PostCard;","map":{"version":3,"sources":["/home/dd/Desktop/nangua/frontend/src/content/container/user/components/cardList.js"],"names":["React","Component","theUrl","tokenHeaders","dateTimeToDate","Icon","Row","Col","StyleCard","PostCard","props","payload","category","filterPayload","filter","item","cateIcon","name","icon","map"],"mappings":";;;;;;AAAA;AACA;AACA,OAAOA,KAAP,IAAiBC,SAAjB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,YAAjB,EAA+BC,cAA/B,QAAqD,YAArD;AACA,SACIC,IADJ,EAEIC,GAFJ,EAESC,GAFT,QAGS,MAHT;AAIA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;AACA;;IAEMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iFACXA,KADW;AAElB;;;;6BAGQ;AAAA,wBACqB,KAAKA,KAD1B;AAAA,UACDC,OADC,eACDA,OADC;AAAA,UACQC,QADR,eACQA,QADR,EAGP;;AACA,UAAIC,aAAJ;;AACA,UAAI,CAACD,QAAL,EAAgB;AACdC,QAAAA,aAAa,GAAGF,OAAhB;AACD,OAFD,MAEO;AACLE,QAAAA,aAAa,GAAGF,OAAO,CAACG,MAAR,CAAe,UAAAC,IAAI,EAAE;AAAE,iBAAOA,IAAI,CAACH,QAAL,KAAkBA,QAAzB;AAAmC,SAA1D,CAAhB;AACD;;AAED,UAAII,QAAQ,GAAG,CACb;AAACC,QAAAA,IAAI,EAAE,QAAP;AAAiBC,QAAAA,IAAI,EAAE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvB,OADa,EAEb;AAACD,QAAAA,IAAI,EAAE,IAAP;AAAaC,QAAAA,IAAI,EAAC,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlB,OAFa,EAGb;AAACD,QAAAA,IAAI,EAAE,MAAP;AAAeC,QAAAA,IAAI,EAAC,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApB,OAHa,EAIb;AAACD,QAAAA,IAAI,EAAE,IAAP;AAAaC,QAAAA,IAAI,EAAC,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAlB,OAJa,CAAf;AAOA,aACE,oBAAC,GAAD;AAAK,QAAA,MAAM,EAAE,KAAK,EAAlB;AAAsB,QAAA,IAAI,EAAC,MAA3B;AAAkC,QAAA,OAAO,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEL,aAAa,CAACM,GAAd,CAAkB,UAACJ,IAAD,EAAS;AACzB,eAAO,oBAAC,GAAD;AAAM,UAAA,EAAE,EAAE,EAAV;AAAc,UAAA,EAAE,EAAE,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACL,oBAAC,SAAD;AAAW,UAAA,IAAI,EAAEA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAEO,OAHT,CADF,CADF;AASD;;;;EAjCkBd,S,GAqCvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAeQ,QAAf","sourcesContent":["// display data and pictures as cards.\n// Accept payload and category\nimport React , { Component }from 'react'\nimport { theUrl, tokenHeaders, dateTimeToDate } from 'selfConfig'\nimport { \n    Icon,\n    Row, Col\n  } from 'antd'\nimport StyleCard from './styleCard'\n// import Zmage from 'react-zmage'\n// import { throws } from 'assert';\n\nclass PostCard extends Component {\n    constructor(props) {\n      super(props)\n    }\n\n\n    render() {\n      let { payload, category } = this.props\n    \n      // filter commodity, in default return all commodity\n      let filterPayload\n      if( !category ) {\n        filterPayload = payload\n      } else { \n        filterPayload = payload.filter(item=>{ return item.category === category })\n      }\n\n      let cateIcon = [\n        {name: 'Others', icon: <Icon type=\"bars\" /> },\n        {name: '书籍', icon:<Icon type=\"book\" /> },\n        {name: '电子产品', icon:<Icon type=\"thunderbolt\" /> },\n        {name: '外快', icon:<Icon type=\"pay-circle\" /> },\n      ]\n\n      return(\n        <Row gutter={16 + 32} type=\"flex\" justify=\"left\">{\n          filterPayload.map((item)=> {\n            return <Col  xs={24} xl={6}>\n              <StyleCard item={item} />\n            </Col>})\n        }\n        </Row>\n      )\n    }\n    \n}\n\n// class LoadZamge extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       set: [],\n//       pic_num : this.props.pic_num,\n//       cid : this.props.cid\n//     }\n\n//     this.getPicList = this.getPicList.bind(this)\n//   }\n\n//   componentDidMount() {\n//     const { pic_num, cid } = this.props\n//     this.getPicList(pic_num, cid)\n//   }\n\n//   getPicList = async (pic_num, cid) => {\n//     let list = []\n//     for(var i = 0; i < pic_num; i++) {\n//       list[i] = await { src: theUrl+`/commodity/${cid}_${i}.jpg`}\n//     }\n\n//     await this.setState({\n//       set: list\n//     })\n//   }\n\n//   render() {\n\n//     return(\n//       <Zmage\n//         style={{heigth: \"10rem\", weight: \"100%\", overflow: \"hidden\"}}\n//         src={theUrl+`/commodity/${this.state.cid}_0_thumb.jpg`}\n//         set={this.state.set}\n//         // preset=\"mobile\"\n//       />\n//     )\n//   }\n// }\n\n\nexport default PostCard;\n  "]},"metadata":{},"sourceType":"module"}
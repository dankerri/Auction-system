{"ast":null,"code":"var _jsxFileName = \"/home/dd/Desktop/shopping/frontend/src/content/container/admin/rootLogin.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getAdminList } from 'selfConfig';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    login: function login(username, level) {\n      dispatch({\n        type: 'LOGIN',\n        username: username,\n        level: level\n      });\n    }\n  };\n};\n\nvar RootLogin = function RootLogin(props) {\n  console.log(getAdminList);\n  var from = props.location;\n  console.log(\"the from is \" + from);\n  var username = '';\n  var password = '';\n\n  var login = function login(e) {\n    e.preventDefault();\n    var url = \"http://localhost:5000/adminLogin\";\n    fetch(url, {\n      headers: {\n        'Accept': 'appliction/json',\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        username: username.value,\n        password: password.value\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      // save token to redux\n      props.login(res.username, res.level); // save token at browser\n\n      localStorage.setItem('token', res.token);\n      props.history.push(\"/root_dashboard\");\n    }).catch(function (e) {\n      alert(\"login failed, check your username or password\");\n    });\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Root Login\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"username\",\n    ref: function ref(input) {\n      return username = input;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"password\",\n    ref: function ref(input) {\n      return password = input;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootLogin);","map":{"version":3,"sources":["/home/dd/Desktop/shopping/frontend/src/content/container/admin/rootLogin.js"],"names":["React","connect","getAdminList","mapStateToProps","state","auth","mapDispatchToProps","dispatch","login","username","level","type","RootLogin","props","console","log","from","location","password","e","preventDefault","url","fetch","headers","method","body","JSON","stringify","value","then","res","json","localStorage","setItem","token","history","push","catch","alert","input"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { getAdminList } from 'selfConfig'\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nconst mapDispatchToProps = dispatch => ({\n    login: (username, level) => {dispatch({\n        type: 'LOGIN',\n        username: username,\n        level: level\n    })}\n})\n\nconst RootLogin = (props) => {\n    console.log(getAdminList)\n    let from = props.location\n    console.log(\"the from is \"+ from)\n    let username = ''\n    let password = ''\n\n    var login = (e) => {\n        e.preventDefault()\n\n        const url=\"http://localhost:5000/adminLogin\"\n        fetch(url, {\n            headers: {\n                'Accept':'appliction/json',\n                'Content-Type':'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify({\n                username: username.value,\n                password: password.value\n            })\n        })\n        .then(res=> { return res.json() })\n        .then(res=> {\n\n            // save token to redux\n            props.login(res.username, res.level)\n\n            // save token at browser\n            localStorage.setItem('token', res.token)\n\n            props.history.push(\"/root_dashboard\")\n\n        })\n        .catch(e=> {\n            alert(\"login failed, check your username or password\")\n        })\n    }\n    \n\n    return (\n        <form onSubmit={login} >\n            <h1>Root Login</h1>\n            <label>\n                <input \n                type=\"text\" \n                placeholder=\"username\" \n                ref={ input => username = input }\n                />\n            </label>\n            <label>\n                <input \n                type=\"password\"\n                placeholder=\"password\"\n                ref={ input => password = input }\n                />\n            </label>\n            <input type=\"submit\" value=\"login\"/>\n        </form>\n    )\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(RootLogin)"]},"metadata":{},"sourceType":"module"}
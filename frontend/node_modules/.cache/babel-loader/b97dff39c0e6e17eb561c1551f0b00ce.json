{"ast":null,"code":"import _regeneratorRuntime from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/dd/Desktop/nangua/frontend/src/content/container/user/components/profile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Input, Button, message } from 'antd';\nimport { Route } from 'react-router-dom';\nimport { theUrl, tokenHeaders } from 'selfConfig';\nimport { UploadWeChat } from '../../public_component/index';\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this, props));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      username: _this.props.auth.username,\n      loading: true,\n      payload: []\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var url = theUrl + '/editUserProfile';\n      var _this$state = this.state,\n          payload = _this$state.payload,\n          username = _this$state.username;\n      var auth = this.props.auth;\n      this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          fetch(url, {\n            headers: tokenHeaders(localStorage.getItem('token')),\n            method: 'POST',\n            body: JSON.stringify({\n              username: username,\n              neckname: values.neckname,\n              phone: values.phone,\n              id: auth.id\n            })\n          }).then(function (res) {\n            return res.json();\n          }).then(function (res) {\n            if (res.edit) {\n              message.success(\"edit success\");\n\n              _this2.setState({\n                payload: {\n                  username: res.username,\n                  neckname: res.neckname,\n                  phone: res.phone\n                }\n              });\n\n              console.log(_this2.state.payload);\n            } else {\n              message.error(\"edit failded\");\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var url, payload;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = theUrl + '/userProfile';\n                _context.next = 3;\n                return fetch(url, {\n                  headers: tokenHeaders(localStorage.getItem(\"token\")),\n                  method: 'POST',\n                  body: JSON.stringify({\n                    username: this.props.auth.username\n                  })\n                }).then(function (res) {\n                  return res.json();\n                });\n\n              case 3:\n                payload = _context.sent;\n                this.setState({\n                  loading: false,\n                  payload: payload[0]\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$state2 = this.state,\n          username = _this$state2.username,\n          payload = _this$state2.payload,\n          loading = _this$state2.loading;\n\n      if (!loading) {\n        return React.createElement(Form, {\n          layout: \"\",\n          onSubmit: this.handleSubmit,\n          style: {\n            width: \"300px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(Form.Item, {\n          label: \"Wechat\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(UploadWeChat, {\n          username: username,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        })), React.createElement(Form.Item, {\n          label: \"Phone Number: \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, getFieldDecorator('phone', {\n          initialValue: payload.phone\n        })(React.createElement(Input, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }))), React.createElement(Form.Item, {\n          label: \"Username: \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \" \", payload.username, \" \")), React.createElement(Form.Item, {\n          label: \"Neck name: \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, getFieldDecorator('neckname', {\n          initialValue: payload.neckname\n        })(React.createElement(Input, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }))), React.createElement(Form.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \"Update change\")));\n      } else {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"Loading\");\n      }\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    list: state.list\n  };\n};\n\nvar theProfile = Form.create({\n  name: 'normal_login'\n})(Profile);\nexport default connect(mapStateToProps)(Form.create({\n  name: 'edit_profile'\n})(theProfile));","map":{"version":3,"sources":["/home/dd/Desktop/nangua/frontend/src/content/container/user/components/profile.js"],"names":["React","Component","connect","Form","Input","Button","message","Route","theUrl","tokenHeaders","UploadWeChat","Profile","props","handleSubmit","bind","state","username","auth","loading","payload","e","preventDefault","url","form","validateFields","err","values","fetch","headers","localStorage","getItem","method","body","JSON","stringify","neckname","phone","id","then","res","json","edit","success","setState","console","log","error","getFieldDecorator","width","initialValue","mapStateToProps","list","theProfile","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from  'react'\nimport { connect } from 'react-redux'\nimport { Form, Input, Button, message } from 'antd'\nimport { Route } from 'react-router-dom'\n\nimport { theUrl, tokenHeaders } from 'selfConfig'\nimport { UploadWeChat } from '../../public_component/index'\n\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.state = {\n            username: this.props.auth.username,\n            loading: true,\n            payload: []\n        }\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const url = theUrl + '/editUserProfile'\n        const { payload, username} = this.state\n        const { auth } = this.props\n\n        this.props.form.validateFields((err, values)=> {\n            if (!err) {\n                fetch(url, {\n                    headers: tokenHeaders(localStorage.getItem('token')),\n                    method: 'POST',\n                    body: JSON.stringify({\n                        username: username,\n                        neckname: values.neckname,\n                        phone: values.phone,\n                        id: auth.id\n                    })\n                })\n                .then(res=> { return res.json() })\n                .then( res => {\n                    if(res.edit) {\n                        message.success(\"edit success\")\n                        this.setState({payload: { \n                            username: res.username,\n                            neckname: res.neckname,\n                            phone: res.phone\n                        }})\n                        console.log(this.state.payload)\n                    } else {\n                        message.error(\"edit failded\")\n                    }\n                })\n            }\n        })\n    }\n\n    async componentDidMount() {\n\n        const url = theUrl + '/userProfile'\n\n        const payload = await fetch(url, {\n            headers: tokenHeaders(localStorage.getItem(\"token\")),\n            method: 'POST',\n            body: JSON.stringify({\n            username: this.props.auth.username\n            })\n        }).then( res => res.json() )\n        \n        this.setState({\n            loading: false,\n            payload: payload[0]\n        })\n    }\n\n    render() { \n        const { getFieldDecorator } = this.props.form\n        const { username, payload, loading } = this.state\n            if( !loading ) {\n                return (\n                    <Form layout=\"\" onSubmit={this.handleSubmit} style={{ width: \"300px\"}}>\n                        <Form.Item label=\"Wechat\">\n                            <UploadWeChat\n                                username={username}\n                            />\n                        </Form.Item>\n                        <Form.Item label=\"Phone Number: \">\n                        {getFieldDecorator('phone',{\n                            initialValue: payload.phone,\n                        })(\n                            <Input />\n                        )}\n                        </Form.Item>\n                        \n                        <Form.Item label=\"Username: \">\n                            <label> { payload.username } </label>\n                        </Form.Item>\n\n                        <Form.Item label=\"Neck name: \">\n                        {getFieldDecorator('neckname', {\n                            initialValue: payload.neckname,\n                        })(\n                            <Input />\n                        )}\n                        </Form.Item>\n                        <Form.Item>\n                        <Button \n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            >Update change</Button>\n                        </Form.Item>\n                    </Form>\n                )\n            }\n            else {\n                return <h1>Loading</h1>\n            }\n\n\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    list: state.list\n})\n\nconst theProfile = Form.create({ name: 'normal_login' })(Profile);\n\nexport default connect(\n    mapStateToProps\n)(Form.create({ name:'edit_profile'})(\ntheProfile))\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/dd/Desktop/nangua/frontend/src/content/container/public_component/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport { Button, Upload, Icon } from 'antd'; // use this button to log out.\n\nvar logoutButton = function logoutButton(props) {\n  var logout = function logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('level');\n    localStorage.removeItem('username');\n    localStorage.removeItem('id');\n    props.dispatch({\n      type: 'LOGOUT'\n    });\n  };\n\n  return React.createElement(Button, {\n    type: \"danger\",\n    onClick: logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"logout\");\n};\n\nvar LogoutButton = connect()(logoutButton); // HOC, get url string from route\n\nvar PreRoute = function PreRoute(_ref) {\n  var match = _ref.match,\n      route = _ref.route;\n  return React.createElement(Route, {\n    path: \"\".concat(match.url) + route.path,\n    component: route.component,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n}; // Upload avatar\n\n\nvar uploadButton = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(Icon, {\n  type: true ? 'loading' : 'plus',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"ant-upload-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, \"Upload\"));\n\nvar UploadAvatar = function UploadAvatar() {\n  return React.createElement(Upload, {\n    name: \"avatar\",\n    listType: \"picture-card\",\n    className: \"avatar-uploader\",\n    showUploadList: false,\n    action: \"//jsonplaceholder.typicode.com/posts/\",\n    onChange: function onChange() {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, false ? React.createElement(\"img\", {\n    src: \"imageUrl\",\n    alt: \"avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }) : uploadButton);\n}; // package all compoents\n\n\nexport { LogoutButton, PreRoute, UploadAvatar };","map":{"version":3,"sources":["/home/dd/Desktop/nangua/frontend/src/content/container/public_component/index.js"],"names":["React","connect","Route","Button","Upload","Icon","logoutButton","props","logout","localStorage","removeItem","dispatch","type","LogoutButton","PreRoute","match","route","url","path","component","uploadButton","UploadAvatar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,QAAqC,MAArC,C,CAEA;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAC1B,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACjBC,IAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,IAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,IAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACAD,IAAAA,YAAY,CAACC,UAAb,CAAwB,IAAxB;AACAH,IAAAA,KAAK,CAACI,QAAN,CAAe;AACXC,MAAAA,IAAI,EAAE;AADK,KAAf;AAGH,GARD;;AASA,SACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEJ,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,CAbD;;AAcA,IAAMK,YAAY,GAAIZ,OAAO,GAAGK,YAAH,CAA7B,C,CAGA;;AACA,IAAMQ,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,KAAV,QAAUA,KAAV;AAAA,SACb,oBAAC,KAAD;AACI,IAAA,IAAI,EAAE,UAAGD,KAAK,CAACE,GAAT,IAAeD,KAAK,CAACE,IAD/B;AAEI,IAAA,SAAS,EAAEF,KAAK,CAACG,SAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa;AAAA,CAAjB,C,CAQA;;;AACA,IAAMC,YAAY,GACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAE,OAAO,SAAP,GAAmB,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADJ;;AAMA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SACjB,oBAAC,MAAD;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,QAAQ,EAAC,cAFT;AAGA,IAAA,SAAS,EAAC,iBAHV;AAIA,IAAA,cAAc,EAAE,KAJhB;AAKA,IAAA,MAAM,EAAC,uCALP;AAMA,IAAA,QAAQ,EAAE,oBAAM,CAAE,CANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQM,QAAQ;AAAK,IAAA,GAAG,EAAE,UAAV;AAAsB,IAAA,GAAG,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR,GAAgDD,YARtD,CADiB;AAAA,CAArB,C,CAaA;;;AACA,SACIP,YADJ,EAEIC,QAFJ,EAGIO,YAHJ","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Route } from 'react-router-dom'\nimport { Button, Upload, Icon } from 'antd'\n\n// use this button to log out.\nconst logoutButton = props => {\n    const logout = () => {\n        localStorage.removeItem('token')\n        localStorage.removeItem('level')\n        localStorage.removeItem('username')\n        localStorage.removeItem('id')\n        props.dispatch({\n            type: 'LOGOUT'\n        })\n    }\n    return(\n        <Button type=\"danger\" onClick={logout}>logout</Button>\n    )\n}\nconst LogoutButton =  connect()(logoutButton)\n\n\n// HOC, get url string from route\nconst PreRoute = ({ match, route}) => (\n    <Route \n        path={`${match.url}`+route.path}\n        component={route.component}\n    />\n)\n\n\n// Upload avatar\nconst uploadButton = (\n    <div>\n      <Icon type={true ? 'loading' : 'plus'} />\n      <div className=\"ant-upload-text\">Upload</div>\n    </div>\n);\nconst UploadAvatar = () => (\n    <Upload\n    name=\"avatar\"\n    listType=\"picture-card\"\n    className=\"avatar-uploader\"\n    showUploadList={false}\n    action=\"//jsonplaceholder.typicode.com/posts/\"\n    onChange={() => {}}\n    >\n         {false ? <img src={\"imageUrl\"} alt=\"avatar\" /> : uploadButton}\n    </Upload>\n)\n\n// package all compoents\nexport { \n    LogoutButton,\n    PreRoute,\n    UploadAvatar\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/dd/Desktop/nangua/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'; // import thunk from 'redux-thunk'\n\nimport createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport 'antd/dist/antd.css'; // self\n\nimport RootRouter from './router/index';\nimport rootReducer from './content/reducer/index';\nimport rootSaga from './content/sagas';\nimport * as serviceWorker from './serviceWorker'; // init auth situation, if token exists, set auth.logged = true\n\nvar checkAuth = function checkAuth() {\n  var token = localStorage.getItem('token');\n  var level = localStorage.getItem('level');\n  var username = localStorage.getItem('username');\n  var id = parseInt(localStorage.getItem('id'));\n\n  if (token && level && username) {\n    store.dispatch({\n      type: 'LOGIN',\n      token: token,\n      level: level,\n      username: username,\n      id: id\n    });\n  }\n};\n\nvar sagaMiddleware = createSagaMiddleware();\nvar store = createStore(rootReducer, compose(applyMiddleware(sagaMiddleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\nsagaMiddleware.run(rootSaga);\ncheckAuth();\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, React.createElement(RootRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/dd/Desktop/nangua/frontend/src/index.js"],"names":["React","ReactDOM","Provider","createSagaMiddleware","createStore","applyMiddleware","compose","RootRouter","rootReducer","rootSaga","serviceWorker","checkAuth","token","localStorage","getItem","level","username","id","parseInt","store","dispatch","type","sagaMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","run","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAO,oBAAP,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CAEA;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,MAAME,QAAQ,GAAGH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;AACA,MAAMG,EAAE,GAAGC,QAAQ,CAACL,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAD,CAAnB;;AACA,MAAIF,KAAK,IAAIG,KAAT,IAAkBC,QAAtB,EAAiC;AAC7BG,IAAAA,KAAK,CAACC,QAAN,CAAe;AACXC,MAAAA,IAAI,EAAE,OADK;AAEXT,MAAAA,KAAK,EAAEA,KAFI;AAGXG,MAAAA,KAAK,EAAEA,KAHI;AAIXC,MAAAA,QAAQ,EAAEA,QAJC;AAKXC,MAAAA,EAAE,EAAEA;AALO,KAAf;AAOH;AACJ,CAdD;;AAgBA,IAAMK,cAAc,GAAGnB,oBAAoB,EAA3C;AACA,IAAMgB,KAAK,GAAGf,WAAW,CACrBI,WADqB,EAErBF,OAAO,CACHD,eAAe,CAACiB,cAAD,CADZ,EAEHC,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFpC,CAFc,CAAzB;AAOAF,cAAc,CAACG,GAAf,CAAmBhB,QAAnB;AAEAE,SAAS;AAGTV,QAAQ,CAACyB,MAAT,CACA,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEP,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADA,EAIAQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJA,E,CAMA;AACA;AACA;;AACAlB,aAAa,CAACmB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import thunk from 'redux-thunk'\nimport createSagaMiddleware from 'redux-saga'\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport 'antd/dist/antd.css';\n\n// self\nimport RootRouter from './router/index'\nimport rootReducer from './content/reducer/index'\nimport rootSaga from './content/sagas'\nimport * as serviceWorker from './serviceWorker'\n\n// init auth situation, if token exists, set auth.logged = true\nconst checkAuth = () => {\n    const token = localStorage.getItem('token')\n    const level = localStorage.getItem('level')\n    const username = localStorage.getItem('username')\n    const id = parseInt(localStorage.getItem('id'))\n    if( token && level && username ) {\n        store.dispatch({\n            type: 'LOGIN',\n            token: token,\n            level: level,\n            username: username,\n            id: id\n        })\n    }\n}\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(sagaMiddleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()    \n      )\n);\nsagaMiddleware.run(rootSaga)\n\ncheckAuth();\n\n\nReactDOM.render(\n<Provider store={store}>\n    <RootRouter />\n</Provider>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}
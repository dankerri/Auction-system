{"ast":null,"code":"import _classCallCheck from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dd/Desktop/nangua/frontend/src/content/container/public_component/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport { Button, Upload, Icon, message } from 'antd';\nimport { theUrl } from 'selfConfig'; // use this button to log out.\n\nvar logoutButton = function logoutButton(props) {\n  var logout = function logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('level');\n    localStorage.removeItem('username');\n    localStorage.removeItem('id');\n    props.dispatch({\n      type: 'LOGOUT'\n    });\n  };\n\n  return React.createElement(Button, {\n    type: \"danger\",\n    onClick: logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"logout\");\n};\n\nvar LogoutButton = connect()(logoutButton); // HOC, get url string from route\n\nvar PreRoute = function PreRoute(_ref) {\n  var match = _ref.match,\n      route = _ref.route;\n  return React.createElement(Route, {\n    path: \"\".concat(match.url) + route.path,\n    component: route.component,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n}; // ==============================================================================================================================\n// check if image exists\n\n\nfunction isHasImg(pathImg) {\n  var ImgObj = new Image();\n  ImgObj.src = pathImg;\n\n  if (ImgObj.fileSize > 0 || ImgObj.width > 0 && ImgObj.height > 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nvar CheckImage = function CheckImage(src) {\n  var defaultUrl = theUrl + '/user/default.png';\n\n  if (!isHasImg(src)) {\n    return React.createElement(\"img\", {\n      src: src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"img\", {\n      src: defaultUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    });\n  }\n}; // Upload Wechat Qrcode\n\n\nfunction getBase64(img, callback) {\n  var reader = new FileReader();\n  reader.addEventListener('load', function () {\n    return callback(reader.result);\n  });\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  var isJPG = file.type === 'image/jpeg';\n\n  if (!isJPG) {\n    message.error('You can only upload JPG file!');\n  }\n\n  var isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error('Image must smaller than 2MB!');\n  }\n\n  return isJPG && isLt2M;\n}\n\nvar UploadWeChat =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UploadWeChat, _React$Component);\n\n  function UploadWeChat(props) {\n    var _this;\n\n    _classCallCheck(this, UploadWeChat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadWeChat).call(this, props));\n    _this.state = {\n      loading: false\n    };\n\n    _this.handleChange = function (info) {\n      if (info.file.status === 'uploading') {\n        _this.setState({\n          loading: true\n        });\n\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        getBase64(info.file.originFileObj, function (imageUrl) {\n          return _this.setState({\n            imageUrl: imageUrl,\n            loading: false\n          });\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadWeChat, [{\n    key: \"render\",\n    value: function render() {\n      var uploadButton = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: this.state.loading ? 'loading' : 'plus',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"ant-upload-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Upload\"));\n      var imageUrl = this.state.imageUrl;\n      return React.createElement(Upload, {\n        name: \"wechat\",\n        listType: \"picture-card\",\n        className: \"avatar-uploader\",\n        showUploadList: false,\n        action: theUrl + \"/upload\",\n        beforeUpload: beforeUpload,\n        onChange: this.handleChange,\n        data: {\n          username: this.props.username\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, imageUrl ? React.createElement(\"img\", {\n        src: imageUrl,\n        alt: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }) : React.createElement(CheckImage, {\n        src: \"\".concat(theUrl, \"/user/\").concat(this.props.username, \"_wx.jpg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UploadWeChat;\n}(React.Component); // package all compoents\n\n\nexport { LogoutButton, PreRoute, UploadWeChat };","map":{"version":3,"sources":["/home/dd/Desktop/nangua/frontend/src/content/container/public_component/index.js"],"names":["React","connect","Route","Button","Upload","Icon","message","theUrl","logoutButton","props","logout","localStorage","removeItem","dispatch","type","LogoutButton","PreRoute","match","route","url","path","component","isHasImg","pathImg","ImgObj","Image","src","fileSize","width","height","CheckImage","defaultUrl","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJPG","error","isLt2M","size","UploadWeChat","state","loading","handleChange","info","status","setState","originFileObj","imageUrl","uploadButton","username","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Route } from 'react-router-dom'\nimport { Button, Upload, Icon, message } from 'antd'\n\nimport { theUrl } from 'selfConfig'\n\n// use this button to log out.\nconst logoutButton = props => {\n    const logout = () => {\n        localStorage.removeItem('token')\n        localStorage.removeItem('level')\n        localStorage.removeItem('username')\n        localStorage.removeItem('id')\n        props.dispatch({\n            type: 'LOGOUT'\n        })\n    }\n    return(\n        <Button type=\"danger\" onClick={logout}>logout</Button>\n    )\n}\nconst LogoutButton =  connect()(logoutButton)\n\n\n// HOC, get url string from route\nconst PreRoute = ({ match, route}) => (\n    <Route \n        path={`${match.url}`+route.path}\n        component={route.component}\n    />\n)\n\n// ==============================================================================================================================\n// check if image exists\nfunction isHasImg(pathImg){\n    var ImgObj=new Image();\n    ImgObj.src= pathImg;\n     if(ImgObj.fileSize > 0 || (ImgObj.width > 0 && ImgObj.height > 0))\n     {\n       return true;\n     } else {\n       return false;\n    }\n}\nconst CheckImage = (src) => {\n    const defaultUrl = theUrl+'/user/default.png'\n    if( !isHasImg(src) ) {\n        return(<img src={src} />)\n    } else {\n        return(<img src={defaultUrl} />)\n    } \n} \n\n// Upload Wechat Qrcode\nfunction getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n  \n  function beforeUpload(file) {\n    const isJPG = file.type === 'image/jpeg';\n    if (!isJPG) {\n      message.error('You can only upload JPG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n    return isJPG && isLt2M;\n  }\n  \n  class UploadWeChat extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n    state = {\n      loading: false,\n    };\n  \n    handleChange = (info) => {\n      if (info.file.status === 'uploading') {\n        this.setState({ loading: true });\n        return;\n      }\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        getBase64(info.file.originFileObj, imageUrl => this.setState({\n          imageUrl,\n          loading: false,\n        }));\n      }\n    }\n  \n    render() {\n      const uploadButton = (\n        <div>\n          <Icon type={this.state.loading ? 'loading' : 'plus'} />\n          <div className=\"ant-upload-text\">Upload</div>\n        </div>\n      );\n      const imageUrl = this.state.imageUrl;\n      return (\n        <Upload\n          name=\"wechat\"\n          listType=\"picture-card\"\n          className=\"avatar-uploader\"\n          showUploadList={false}\n          action={theUrl+\"/upload\"}\n          beforeUpload={beforeUpload}\n          onChange={this.handleChange}\n          data={{username: this.props.username}}\n        >\n          {imageUrl ? <img src={imageUrl} alt=\"avatar\" /> : <CheckImage src={`${theUrl}/user/${this.props.username}_wx.jpg`}/>}\n        </Upload>\n      );\n    }\n  }\n\n// package all compoents\nexport { \n    LogoutButton,\n    PreRoute,\n    UploadWeChat\n}\n"]},"metadata":{},"sourceType":"module"}
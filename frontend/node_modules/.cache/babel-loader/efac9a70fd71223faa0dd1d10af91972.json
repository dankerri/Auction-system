{"ast":null,"code":"var _jsxFileName = \"/home/dd/Desktop/shopping/frontend/src/content/container/user/signup.js\";\nimport React from 'react';\nimport { Form, Icon, Input, Button } from 'antd';\n\nvar Signup = function Signup(props) {\n  var comfirmDirty = false;\n  var getFieldDecorator = props.form.getFieldDecorator;\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    props.form.validateFields(function (err, values) {\n      if (!err) {\n        console.log(\"data valid, signing up now\");\n      }\n    });\n  };\n\n  var validateToNextPassword = function validateToNextPassword(rule, value, callback) {\n    var form = props.form;\n\n    if (value && comfirmDirty) {\n      form.validataFields(['confirm'], {\n        force: true\n      });\n    }\n\n    callback();\n  };\n\n  var compareToFirstPassword = function compareToFirstPassword(rules, value, callback) {\n    var form = props.form;\n\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two password that you entry are inconsistent');\n    } else {\n      callback();\n    }\n  };\n\n  return React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, getFieldDecorator('email', {\n    rules: [{\n      type: 'email',\n      message: 'The input is not a valid email'\n    }, {\n      required: true,\n      message: 'Please input your username'\n    }]\n  })(React.createElement(Input, {\n    placeholder: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, getFieldDecorator('password', {\n    rules: [{\n      required: true,\n      message: 'Please input your message'\n    }, {\n      validator: validateToNextPassword\n    }]\n  })(React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, getFieldDecorator('confirm', {\n    rules: [{\n      required: true,\n      message: 'Please input your password again'\n    }, {\n      validator: compareToFirstPassword\n    }]\n  })(React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"input password again\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Button, {\n    tpye: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"sign up\")));\n};\n\nexport default Form.create({\n  name: 'normal_login'\n})(Signup);","map":{"version":3,"sources":["/home/dd/Desktop/shopping/frontend/src/content/container/user/signup.js"],"names":["React","Form","Icon","Input","Button","Signup","props","comfirmDirty","getFieldDecorator","form","handleSubmit","e","preventDefault","validateFields","err","values","console","log","validateToNextPassword","rule","value","callback","validataFields","force","compareToFirstPassword","rules","getFieldValue","type","message","required","validator","create","name"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n    Form, Icon, Input, Button\n} from 'antd';\n\n\nconst Signup = (props) => {\n    let comfirmDirty = false\n\n    const { getFieldDecorator } = props.form\n    \n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        props.form.validateFields((err, values)=>{\n            if( !err ) {\n                console.log(\"data valid, signing up now\")\n            }\n        })\n    }\n\n    const validateToNextPassword = (rule, value, callback) => {\n        const form = props.form\n        if ( value && comfirmDirty) {\n            form.validataFields(['confirm'], { force: true })\n        }\n        callback()\n    }\n\n    const compareToFirstPassword = (rules, value, callback) => {\n        const form = props.form\n        if( value && value !== form.getFieldValue('password')) {\n            callback('Two password that you entry are inconsistent')\n        } else {\n            callback()\n        }\n    }\n    return(\n        <Form onSubmit={handleSubmit}>\n            <Form.Item>\n            {getFieldDecorator('email', {\n                rules: [{\n                    type: 'email', message: 'The input is not a valid email'\n                }, {\n                    required: true, message: 'Please input your username'\n                }]\n            })\n            (<Input placeholder=\"email\"/>)}\n            </Form.Item>\n\n            <Form.Item>\n            {getFieldDecorator('password', {\n                rules: [{\n                    required : true, message: 'Please input your message'\n                }, {\n                    validator: validateToNextPassword\n                }]\n            })(<Input type=\"password\" placeholder=\"password\"/>)}\n            </Form.Item>\n\n            <Form.Item>\n            {getFieldDecorator('confirm',{\n                rules: [{\n                    required: true, message: 'Please input your password again'\n                }, {\n                    validator: compareToFirstPassword\n                }]\n            })(<Input type=\"password\" placeholder=\"input password again\"/>)}\n            </Form.Item>\n\n            <Form.Item>\n            <Button tpye=\"primary\" htmlType=\"submit\">sign up</Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\n\nexport default Form.create({name: 'normal_login'})(Signup)"]},"metadata":{},"sourceType":"module"}
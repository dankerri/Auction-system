{"ast":null,"code":"var _jsxFileName = \"/home/dd/Desktop/shopping/frontend/src/content/container/user/signup.js\";\nimport React from 'react';\nimport { Form, Icon, Input, Button } from 'antd';\n\nvar Signup = function Signup(props) {\n  var comfirmDirty = false;\n  var getFieldDecorator = props.form.getFieldDecorator;\n\n  var handleSubmit = function handleSubmit() {\n    console.log(\"submiting\");\n  };\n\n  var validateToNextPassword = function validateToNextPassword(rule, value, callback) {\n    var form = props.form;\n\n    if (value && comfirmDirty) {\n      form.validataFields(['confirm'], {\n        force: true\n      });\n    }\n\n    callback();\n  };\n\n  return React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, getFieldDecorator('email', {\n    rules: [{\n      type: 'email',\n      message: 'The input is not a valid email'\n    }, {\n      required: true,\n      message: 'Please input your username'\n    }]\n  })(React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, getFieldDecorator('password', {\n    rules: [{\n      required: true,\n      message: 'Please input your message'\n    }, {\n      validator: validateToNextPassword\n    }]\n  })(React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))));\n};\n\nexport default Form.create({\n  name: 'normal_login'\n})(Signup);","map":{"version":3,"sources":["/home/dd/Desktop/shopping/frontend/src/content/container/user/signup.js"],"names":["React","Form","Icon","Input","Button","Signup","props","comfirmDirty","getFieldDecorator","form","handleSubmit","console","log","validateToNextPassword","rule","value","callback","validataFields","force","rules","type","message","required","validator","create","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,IADJ,EACUC,IADV,EACgBC,KADhB,EACuBC,MADvB,QAEO,MAFP;;AAKA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACtB,MAAIC,YAAY,GAAG,KAAnB;AADsB,MAGdC,iBAHc,GAGQF,KAAK,CAACG,IAHd,CAGdD,iBAHc;;AAItB,MAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAAyB,GAAtD;;AACA,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAA2B;AACtD,QAAMP,IAAI,GAAGH,KAAK,CAACG,IAAnB;;AACA,QAAKM,KAAK,IAAIR,YAAd,EAA4B;AACxBE,MAAAA,IAAI,CAACQ,cAAL,CAAoB,CAAC,SAAD,CAApB,EAAiC;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAjC;AACH;;AACDF,IAAAA,QAAQ;AACX,GAND;;AAOA,SACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEN,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCF,iBAAiB,CAAC,OAAD,EAAU;AACxBW,IAAAA,KAAK,EAAE,CAAC;AACJC,MAAAA,IAAI,EAAE,OADF;AACWC,MAAAA,OAAO,EAAE;AADpB,KAAD,EAEJ;AACCC,MAAAA,QAAQ,EAAE,IADX;AACiBD,MAAAA,OAAO,EAAE;AAD1B,KAFI;AADiB,GAAV,CAAjB,CAOA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,CADD,CADJ,EAYI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCb,iBAAiB,CAAC,UAAD,EAAa;AAC3BW,IAAAA,KAAK,EAAE,CAAC;AACJG,MAAAA,QAAQ,EAAG,IADP;AACaD,MAAAA,OAAO,EAAE;AADtB,KAAD,EAEJ;AACCE,MAAAA,SAAS,EAAEV;AADZ,KAFI;AADoB,GAAb,CAAjB,CAME,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADD,CAZJ,CADJ;AAwBH,CApCD;;AAuCA,eAAeZ,IAAI,CAACuB,MAAL,CAAY;AAACC,EAAAA,IAAI,EAAE;AAAP,CAAZ,EAAoCpB,MAApC,CAAf","sourcesContent":["import React from 'react'\nimport {\n    Form, Icon, Input, Button\n} from 'antd';\n\n\nconst Signup = (props) => {\n    let comfirmDirty = false\n\n    const { getFieldDecorator } = props.form\n    const handleSubmit = () => { console.log(\"submiting\")}\n    const validateToNextPassword = (rule, value, callback) => {\n        const form = props.form\n        if ( value && comfirmDirty) {\n            form.validataFields(['confirm'], { force: true })\n        }\n        callback()\n    }\n    return(\n        <Form onSubmit={handleSubmit}>\n            <Form.Item>\n            {getFieldDecorator('email', {\n                rules: [{\n                    type: 'email', message: 'The input is not a valid email'\n                }, {\n                    required: true, message: 'Please input your username'\n                }]\n            })\n            (<Input />)}\n            </Form.Item>\n\n            <Form.Item>\n            {getFieldDecorator('password', {\n                rules: [{\n                    required : true, message: 'Please input your message'\n                }, {\n                    validator: validateToNextPassword\n                }]\n            })(<Input />)}\n            </Form.Item>\n        </Form>\n    )\n}\n\n\nexport default Form.create({name: 'normal_login'})(Signup)"]},"metadata":{},"sourceType":"module"}
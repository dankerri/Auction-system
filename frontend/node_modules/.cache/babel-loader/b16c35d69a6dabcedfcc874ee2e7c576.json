{"ast":null,"code":"import _classCallCheck from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/dd/Desktop/nangua/frontend/src/content/container/user/components/upload.js\";\nimport React from 'react';\nimport { Upload, Icon, Modal, Button, message, Form } from 'antd';\nimport { theUrl } from 'selfConfig';\nvar props = {\n  action: '//jsonplaceholder.typicode.com/posts/',\n  listType: 'picture',\n  defaultFileList: []\n};\n\nvar Picwall =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Picwall, _React$Component);\n\n  function Picwall(props) {\n    var _this;\n\n    _classCallCheck(this, Picwall);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Picwall).call(this, props));\n    _this.handleEvent = _this.handleEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Picwall, [{\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      // this.props.form.setFieldsValue({uploadComTest: fileList}); ???\n      if (!e || !e.fileList) {\n        return e;\n      }\n\n      var fileList = e.fileList; // console.log(\"handleEvent: \", fileList);\n\n      return fileList;\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          // console.log(values)\n          var url = theUrl + '/testing';\n          fetch(url, {\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify({\n              cardPic: values.uploadPics,\n              cardInfo: {\n                id: '1'\n              }\n            })\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator; // console.log(\"this.props.from: \", this.props.form);\n\n      var props = {\n        action: theUrl + \"/createCard\",\n        listType: \"picture\",\n        onChange: this.handleUpload\n      };\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, getFieldDecorator('uploadPics', {\n        valuePropName: 'fileList',\n        getValueFromEvent: this.handleEvent,\n        rules: [{\n          required: true,\n          message: 'add picture'\n        }]\n      })(React.createElement(Upload, Object.assign({\n        name: \"logo\"\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"ghost\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), \" Click to upload\")))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"submit\")));\n    }\n  }]);\n\n  return Picwall;\n}(React.Component);\n\nexport default Form.create({\n  name: 'upload_form'\n})(Picwall);","map":{"version":3,"sources":["/home/dd/Desktop/nangua/frontend/src/content/container/user/components/upload.js"],"names":["React","Upload","Icon","Modal","Button","message","Form","theUrl","props","action","listType","defaultFileList","Picwall","handleEvent","bind","handleSubmit","e","fileList","preventDefault","form","validateFields","err","values","url","fetch","headers","method","body","JSON","stringify","cardPic","uploadPics","cardInfo","id","getFieldDecorator","onChange","handleUpload","valuePropName","getValueFromEvent","rules","required","Component","create","name"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { Upload, Icon, Modal, Button, message, Form } from 'antd'\nimport { theUrl } from 'selfConfig'\n\nconst props = {\n  action: '//jsonplaceholder.typicode.com/posts/',\n  listType: 'picture',\n  defaultFileList: [],\n};\n\nclass Picwall extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleEvent = this.handleEvent.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n  \n  handleEvent(e)  {\n    // this.props.form.setFieldsValue({uploadComTest: fileList}); ???\n    \n    if (!e || !e.fileList) {\n      return e;\n    }\n    \n    const { fileList } = e;\n    // console.log(\"handleEvent: \", fileList);\n    return fileList;\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.form.validateFields((err, values)=>{\n      if(!err) {\n        // console.log(values)\n        const url = theUrl + '/testing'\n        fetch(url, {\n          headers: {\n            'Accept':'application/json',\n            'Content-Type': 'application/json'\n          },\n          method: 'POST',\n          body: JSON.stringify({\n            cardPic: values.uploadPics,\n            cardInfo: { id: '1'}\n          })\n        })\n      }\n    })\n\n  }\n\n\n  render() {\n    const {getFieldDecorator,} = this.props.form;\n    // console.log(\"this.props.from: \", this.props.form);\n    const props = {\n      action: theUrl+\"/createCard\",\n      listType: \"picture\",\n      onChange: this.handleUpload,\n    };\n    return (\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Item>\n          {getFieldDecorator('uploadPics', {\n            valuePropName: 'fileList',\n            getValueFromEvent: this.handleEvent,\n            rules: [{\n              required: true , message:'add picture'\n            }]\n          })(\n            <Upload name=\"logo\" {...props}>\n              <Button type=\"ghost\">\n                <Icon type=\"upload\" /> Click to upload\n              </Button>\n            </Upload>\n          )}\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n            >\n              submit\n            </Button>\n          </Form.Item>\n        </Form>\n    );\n  }\n}\n\nexport default Form.create({name: 'upload_form'})(Picwall)"]},"metadata":{},"sourceType":"module"}
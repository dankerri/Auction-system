{"ast":null,"code":"import _regeneratorRuntime from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/dd/Desktop/nangua/frontend/src/content/container/user/components/commodity_list.js\";\nimport React, { Component } from 'react';\nimport { theUrl, tokenHeaders } from 'selfConfig';\nimport { connect } from 'react-redux';\nimport { Table, Popconfirm } from 'antd';\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n\n    _this.delAdmin = function (id) {\n      var newPayload = _this.state.payload.filter(function (element) {\n        return element.id !== id;\n      });\n\n      _this.setState({\n        payload: newPayload\n      });\n    };\n\n    _this.delAdmin = _this.delAdmin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      url: theUrl + '/commodityList',\n      columns: [{\n        title: 'Commodity ID',\n        dataIndex: 'id',\n        key: 'com_id'\n      }, {\n        title: 'Commodity Name',\n        dataIndex: 'commodity_name',\n        key: 'commodity_namne'\n      }, {\n        title: 'Price',\n        dataIndex: 'price',\n        key: 'price'\n      }, {\n        title: 'Seller ID',\n        dataIndex: 'seller_id',\n        key: 'seller_id'\n      }, {\n        title: 'Seller',\n        dataIndex: 'username',\n        key: 'username'\n      }, {\n        title: 'Post Time',\n        dataIndex: 'post_time',\n        key: 'post_time'\n      }, {\n        title: 'Commodity Description',\n        dataIndex: 'commodity_des',\n        key: 'commodity_des'\n      }, {\n        title: 'Categoray',\n        dataIndex: 'category',\n        key: 'category'\n      }, {\n        title: 'Action',\n        key: 'action',\n        render: function render(text, record) {\n          return React.createElement(Popconfirm, {\n            title: \"Sure to delete?\",\n            onConfirm: function onConfirm() {\n              return _this.delAdmin(record.commodity_id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: \"javascript:;\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, \"Delete\"));\n        }\n      }],\n      loading: true,\n      payload: []\n    };\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var url, payload;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = this.state.url;\n                _context.next = 3;\n                return fetch(url, {\n                  headers: tokenHeaders(localStorage.getItem(\"token\")),\n                  method: 'get'\n                }).then(function (res) {\n                  return res.json();\n                });\n\n              case 3:\n                payload = _context.sent;\n                this.setState({\n                  loading: false,\n                  payload: payload\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          payload = _this$state.payload,\n          columns = _this$state.columns;\n\n      if (loading) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Loading\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Table, {\n          dataSource: payload,\n          columns: columns,\n          rowKey: function rowKey(record) {\n            return record.id;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return List;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    deleteAdmin: function deleteAdmin(id) {\n      return dispatch({\n        type: 'DEL_COMMODITY',\n        id: id\n      });\n    },\n    init: function init(res) {\n      return dispatch({\n        type: 'INIT',\n        res: res\n      });\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    list: state.list\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/home/dd/Desktop/nangua/frontend/src/content/container/user/components/commodity_list.js"],"names":["React","Component","theUrl","tokenHeaders","connect","Table","Popconfirm","List","props","delAdmin","id","newPayload","state","payload","filter","element","setState","bind","url","columns","title","dataIndex","key","render","text","record","commodity_id","loading","fetch","headers","localStorage","getItem","method","then","res","json","mapDispatchToProps","dispatch","deleteAdmin","type","init","mapStateToProps","list"],"mappings":"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","sourcesContent":["import React , { Component }from 'react'\nimport { theUrl, tokenHeaders } from 'selfConfig'\nimport { connect } from 'react-redux'\nimport { Table, Popconfirm } from 'antd'\n\nclass List extends Component {\n    constructor(props) {\n        super(props)\n        this.delAdmin = this.delAdmin.bind(this)\n\n        this.state = {\n            url: theUrl + '/commodityList',\n            columns: [{\n                title: 'Commodity ID',\n                dataIndex: 'id',\n                key: 'com_id',\n              }, {\n                title: 'Commodity Name',\n                dataIndex: 'commodity_name',\n                key: 'commodity_namne'\n              }, {\n                  title: 'Price',\n                  dataIndex: 'price',\n                  key: 'price'\n              },{\n                title: 'Seller ID',\n                dataIndex: 'seller_id',\n                key: 'seller_id',\n              }, {\n                  title: 'Seller',\n                  dataIndex: 'username',\n                  key: 'username'\n              }, {\n                  title: 'Post Time',\n                  dataIndex: 'post_time',\n                  key: 'post_time'\n              }, {\n                  title: 'Commodity Description',\n                  dataIndex: 'commodity_des',\n                  key: 'commodity_des'\n              }, {\n                title: 'Categoray',\n                dataIndex: 'category',\n                key: 'category',\n            }, {\n                title: 'Action',\n                key: 'action',\n                render: (text, record) => (\n                    <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.delAdmin(record.commodity_id)}>\n                        <a href=\"javascript:;\">Delete</a>\n                    </Popconfirm>\n                ),\n            }],\n            loading: true,\n            payload: []\n        }\n    }\n    async componentDidMount() {\n        const { url } = this.state\n        const payload = await fetch(url, {\n            headers: tokenHeaders(localStorage.getItem(\"token\")),\n            method: 'get',\n        })\n        .then(res => { return res.json() })\n\n        this.setState({\n            loading: false,\n            payload: payload\n        })\n    }   \n\n    delAdmin = (id) => {\n        const newPayload = this.state.payload.filter(element => element.id !== id)\n        this.setState({\n            payload: newPayload\n        })\n    }\n\n    render() {\n        const { loading, payload, columns } = this.state\n        if (loading) {\n            return <h1>Loading</h1>\n        }\n        else {\n            return(\n                <div>\n                    \n                    <Table \n                        dataSource={payload}\n                        columns={columns}\n                        rowKey={record => record.id}\n                    />\n                </div>\n            )\n        }\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    deleteAdmin : id => dispatch({\n        type: 'DEL_COMMODITY',\n        id\n    }),\n    init: res => dispatch({\n        type: 'INIT',\n        res\n    })\n})\n\nconst mapStateToProps = state => ({\n    list: state.list\n})\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(List);\n\n\n"]},"metadata":{},"sourceType":"module"}
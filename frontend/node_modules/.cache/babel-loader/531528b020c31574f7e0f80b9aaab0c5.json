{"ast":null,"code":"import _toConsumableArray from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/dd/Desktop/nangua/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/dd/Desktop/nangua/frontend/src/content/container/user/components/postCommodity.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Input, Button, Upload, Icon, Select, message } from 'antd';\nimport { Link, Route } from 'react-router-dom';\nimport reqwest from 'reqwest';\nimport { theUrl, tokenHeaders } from 'selfConfig';\nimport { PreRoute, UploadWeChat } from '../../public_component/index'; // page structor\n\nvar postCommodity = function postCommodity(_ref) {\n  var match = _ref.match,\n      auth = _ref.auth;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: {\n      pathname: \"/user_profile/postedCommodity/newPost\",\n      state: {\n        username: auth.username\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Create New Post\"), React.createElement(Route, {\n    path: \"/user_profile/postedCommodity/newPost\",\n    component: NewPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(LivingPostList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n};\n\nvar newPost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(newPost, _Component);\n\n  function newPost(props) {\n    var _this;\n\n    _classCallCheck(this, newPost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(newPost).call(this, props));\n    _this.state = {\n      loading: true,\n      // location.state is passed by <Link>\n      username: _this.props.location.state.username,\n      payload: []\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(newPost, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var url, payload;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = theUrl + '/userProfile';\n                _context.next = 3;\n                return fetch(url, {\n                  headers: tokenHeaders(localStorage.getItem(\"token\")),\n                  method: 'POST',\n                  body: JSON.stringify({\n                    username: this.state.username\n                  })\n                }).then(function (res) {\n                  return res.json();\n                });\n\n              case 3:\n                payload = _context.sent;\n                this.setState({\n                  loading: false,\n                  payload: payload[0]\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log(_this2.state.payload);\n          console.log(values);\n          var payload = _this2.state.payload;\n          var url = theUrl + '/createCard';\n          var myDate = new Date();\n          fetch(url, {\n            headers: tokenHeaders(localStorage.getItem(\"token\")),\n            method: 'POST',\n            body: JSON.stringify({\n              uid: payload.uid,\n              commodity: values.commoidty,\n              price: values.price,\n              des: values.des,\n              post_time: myDate.toLocaleString(),\n              category: values.category\n            })\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var payload = this.state.payload;\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var TextArea = Input.TextArea;\n      var Option = Select.Option;\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: \"phone number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, getFieldDecorator('phone', {\n        initialValue: payload.phone\n      })(React.createElement(Input, {\n        username: payload.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Demo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })), React.createElement(Form.Item, {\n        label: \"commodity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, getFieldDecorator('commodity', {\n        rules: [{\n          required: true,\n          message: '商品名不能为空'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, getFieldDecorator('price', {\n        rules: [{\n          required: true,\n          message: '商品价格不能为空'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, getFieldDecorator('des', {\n        rules: [{\n          required: true,\n          message: '商品描述不能为空'\n        }]\n      })(React.createElement(TextArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"\\u5206\\u7C7B\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, getFieldDecorator('category', {\n        initialValue: \"1\",\n        rules: [{\n          required: true,\n          message: '商品描述不能为空'\n        }]\n      })(React.createElement(Select, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"\\u4E66\\u7C4D\"), React.createElement(Option, {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"\\u7535\\u5B50\\u4EA7\\u54C1\"), React.createElement(Option, {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"\\u5916\\u5FEB\"), React.createElement(Option, {\n        value: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"others\")))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Create Now!\")));\n    }\n  }]);\n\n  return newPost;\n}(Component);\n\nvar LivingPostList = function LivingPostList() {\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Living Commodity List\");\n}; // =================================================================================================\n// test part\n\n\nvar Demo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Demo, _React$Component);\n\n  function Demo() {\n    var _getPrototypeOf2;\n\n    var _this3;\n\n    _classCallCheck(this, Demo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Demo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this3.state = {\n      fileList: [],\n      uploading: false\n    };\n\n    _this3.handleUpload = function () {\n      var fileList = _this3.state.fileList;\n      var formData = new FormData();\n      fileList.forEach(function (file) {\n        formData.append('pic', file);\n      });\n\n      _this3.setState({\n        uploading: true\n      }); // You can use any AJAX library you like\n\n\n      reqwest({\n        url: theUrl + '/uploadCommodityPic',\n        method: 'post',\n        processData: false,\n        data: formData,\n        success: function success() {\n          _this3.setState({\n            uploading: false\n          });\n\n          message.success('upload successfully.');\n        },\n        error: function error() {\n          _this3.setState({\n            uploading: false\n          });\n\n          message.error('upload failed.');\n        }\n      });\n    };\n\n    return _this3;\n  }\n\n  _createClass(Demo, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          uploading = _this$state.uploading,\n          fileList = _this$state.fileList;\n      var props = {\n        onRemove: function onRemove(file) {\n          _this4.setState(function (state) {\n            var index = state.fileList.indexOf(file);\n            var newFileList = state.fileList.slice();\n            newFileList.splice(index, 1);\n            return {\n              fileList: newFileList\n            };\n          });\n        },\n        beforeUpload: function beforeUpload(file) {\n          _this4.setState(function (state) {\n            return {\n              fileList: [].concat(_toConsumableArray(state.fileList), [file])\n            };\n          });\n\n          return false;\n        },\n        fileList: fileList\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Upload, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), \" Select File\")), React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.handleUpload,\n        disabled: fileList.length === 0,\n        loading: uploading,\n        style: {\n          marginTop: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, uploading ? 'Uploading' : 'Start Upload'));\n    }\n  }]);\n\n  return Demo;\n}(React.Component); // ================================================================================================\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nvar PostCommodity = connect(mapStateToProps)(postCommodity);\nvar NewPost = Form.create({\n  name: 'create_new_post'\n})(newPost);\nexport default PostCommodity;","map":{"version":3,"sources":["/home/dd/Desktop/nangua/frontend/src/content/container/user/components/postCommodity.js"],"names":["React","Component","connect","Form","Input","Button","Upload","Icon","Select","message","Link","Route","reqwest","theUrl","tokenHeaders","PreRoute","UploadWeChat","postCommodity","match","auth","pathname","state","username","NewPost","newPost","props","loading","location","payload","handleSubmit","bind","url","fetch","headers","localStorage","getItem","method","body","JSON","stringify","then","res","json","setState","e","preventDefault","form","validateFields","err","values","console","log","myDate","Date","uid","commodity","commoidty","price","des","post_time","toLocaleString","category","getFieldDecorator","TextArea","Option","initialValue","phone","rules","required","LivingPostList","Demo","fileList","uploading","handleUpload","formData","FormData","forEach","file","append","processData","data","success","error","onRemove","index","indexOf","newFileList","slice","splice","beforeUpload","length","marginTop","mapStateToProps","PostCommodity","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Form, Input, Button, Upload, Icon, Select,  message, } from 'antd'\nimport { Link,Route } from 'react-router-dom'\nimport reqwest from 'reqwest'\n\nimport { theUrl , tokenHeaders } from 'selfConfig'\nimport { PreRoute, UploadWeChat } from '../../public_component/index'\n\n// page structor\nconst postCommodity = ({match, auth}) => {\n    return(\n        <div>\n            <Link \n                to={{\n                    pathname: \"/user_profile/postedCommodity/newPost\",\n                    state: {\n                        username: auth.username\n                    }\n                }}\n            >Create New Post</Link>\n            <Route \n                path={\"/user_profile/postedCommodity/newPost\"   }\n                component={NewPost}\n            />\n            <LivingPostList />\n        </div>\n    )\n}\n\n\nclass  newPost extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            // location.state is passed by <Link>\n            username: this.props.location.state.username,\n            payload: []\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    async componentDidMount() {\n        const url = theUrl + '/userProfile'\n\n        const payload = await fetch(url, {\n            headers: tokenHeaders(localStorage.getItem(\"token\")),\n            method: 'POST',\n            body: JSON.stringify({\n            username: this.state.username\n            })\n        }).then( res => res.json() )\n        \n        this.setState({\n            loading: false,\n            payload: payload[0]\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.props.form.validateFields((err, values)=> {\n            if(!err) {\n\n              console.log(this.state.payload)\n              console.log(values)\n\n              const {payload} = this.state\n              const url = theUrl + '/createCard'\n              const myDate = new Date()\n              \n              fetch(url, {\n                headers: tokenHeaders(localStorage.getItem(\"token\")),\n                method: 'POST',\n                body: JSON.stringify({\n                  uid: payload.uid,\n                  commodity: values.commoidty,\n                  price: values.price,\n                  des: values.des,\n                  post_time: myDate.toLocaleString( ),\n                  category: values.category\n                })\n              })\n            }\n        })\n    }\n\n\n    render() {\n        const {payload} = this.state\n        const { getFieldDecorator } = this.props.form\n        const { TextArea } = Input \n        const { Option } = Select \n        return(\n            <Form onSubmit={this.handleSubmit}>\n                {/* personal information */}\n                <Form.Item label=\"phone number\">\n                {getFieldDecorator('phone', {\n                    initialValue: payload.phone,\n                })(\n                    <Input \n                        username={payload.username}\n                    />\n                )}\n                </Form.Item>\n                <Form.Item>\n                    <Demo />\n                </Form.Item>\n                \n                <Form.Item label=\"commodity\">\n                {getFieldDecorator('commodity', {\n                    rules: [{required: true, message: '商品名不能为空'}]\n                })(\n                    <Input />\n                )}\n                </Form.Item>\n                <Form.Item label=\"price\">\n                {getFieldDecorator('price', {\n                    rules: [{required: true, message: '商品价格不能为空'}]\n                })(\n                    <Input />\n                )}\n                </Form.Item>\n\n                <Form.Item label=\"description\">\n                {getFieldDecorator('des', {\n                    rules: [{required: true, message: '商品描述不能为空'}]\n                })(\n                    <TextArea />\n                )}\n                </Form.Item>\n\n                <Form.Item label=\"分类\">\n                {getFieldDecorator('category', {\n                    initialValue: \"1\",\n                    rules: [{required: true, message: '商品描述不能为空'}]\n                })(\n                  <Select>\n                    <Option value=\"1\">书籍</Option>\n                    <Option value=\"2\">电子产品</Option>\n                    <Option value=\"3\">外快</Option>\n                    <Option value=\"0\">others</Option>\n                  </Select>\n                )}\n                </Form.Item>\n\n                <Form.Item>\n                    <Button \n                        type=\"primary\"\n                        htmlType=\"submit\"\n                    >Create Now!</Button>\n                </Form.Item>\n            </Form>\n        )\n    }\n}\n\nconst LivingPostList = () => {\n    return (\n        <h1>Living Commodity List</h1>\n    )\n}\n\n// =================================================================================================\n// test part\n\nclass Demo extends React.Component {\n    state = {\n      fileList: [],\n      uploading: false,\n    }\n  \n    handleUpload = () => {\n      const { fileList } = this.state;\n      const formData = new FormData();\n      fileList.forEach((file) => {\n        formData.append('pic', file);\n      });\n  \n      this.setState({\n        uploading: true,\n      });\n  \n      // You can use any AJAX library you like\n      reqwest({\n        url: theUrl+'/uploadCommodityPic',\n        method: 'post',\n        processData: false,\n        data: formData,\n        success: () => {\n          this.setState({\n            uploading: false,\n          });\n          message.success('upload successfully.');\n        },\n        error: () => {\n          this.setState({\n            uploading: false,\n          });\n          message.error('upload failed.');\n        },\n      });\n    }\n  \n    render() {\n      const { uploading, fileList } = this.state;\n      const props = {\n        onRemove: (file) => {\n          this.setState((state) => {\n            const index = state.fileList.indexOf(file);\n            const newFileList = state.fileList.slice();\n            newFileList.splice(index, 1);\n            return {\n              fileList: newFileList,\n            };\n          });\n        },\n        beforeUpload: (file) => {\n          this.setState(state => ({\n            fileList: [...state.fileList, file],\n          }));\n          return false;\n        },\n        fileList,\n      };\n  \n      return (\n        <div>\n          <Upload {...props}>\n            <Button>\n              <Icon type=\"upload\" /> Select File\n            </Button>\n          </Upload>\n          <Button\n            type=\"primary\"\n            onClick={this.handleUpload}\n            disabled={fileList.length === 0}\n            loading={uploading}\n            style={{ marginTop: 16 }}\n          >\n            {uploading ? 'Uploading' : 'Start Upload' }\n          </Button>\n        </div>\n      );\n    }\n  }\n  \n\n\n\n\n\n\n\n\n\n\n\n// ================================================================================================\n\n\n\n\n\n\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\nconst PostCommodity =  connect(mapStateToProps )(postCommodity)\nconst NewPost = Form.create({ name: 'create_new_post' })(newPost)\n\nexport default PostCommodity"]},"metadata":{},"sourceType":"module"}